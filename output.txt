[info] welcome to sbt 1.9.7 (Microsoft Java 11.0.14.1)
[info] loading settings for project zio-schema-build-build from sbt-updates.sbt ...
[info] loading project definition from /workspaces/zio-schema/project/project
[info] loading settings for project zio-schema-build from plugins.sbt ...
[info] loading project definition from /workspaces/zio-schema/project
[info] loading settings for project root from build.sbt ...
[info] resolving key references (44937 settings) ...
[info] set current project to zio-schema (in build file:/workspaces/zio-schema/)
[warn] there are 63 keys that are not used by any other settings/tasks:
[warn]  
[warn] * ThisBuild / name
[warn]   +- /workspaces/zio-schema/build.sbt:13
[warn] * testsJS / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * testsJS / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * testsJVM / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * testsJVM / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * testsNative / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * testsNative / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaAvro / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaAvro / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaBson / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaBson / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaDerivationJS / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaDerivationJS / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaDerivationJVM / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaDerivationJVM / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaDerivationNative / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaDerivationNative / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaJS / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaJS / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaJVM / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaJVM / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaJsonJS / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaJsonJS / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaJsonJVM / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaJsonJVM / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaJsonNative / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaJsonNative / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaMacrosJS / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaMacrosJS / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaMacrosJVM / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaMacrosJVM / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaMacrosNative / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaMacrosNative / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaMsgPack / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaMsgPack / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaNative / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaNative / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaOpticsJS / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaOpticsJS / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaOpticsJVM / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaOpticsJVM / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaOpticsNative / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaOpticsNative / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaProtobufJS / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaProtobufJS / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaProtobufJVM / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaProtobufJVM / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaProtobufNative / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaProtobufNative / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaThrift / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaThrift / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaXmlJS / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaXmlJS / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaXmlJVM / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaXmlJVM / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaXmlNative / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaXmlNative / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaZioTestJS / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaZioTestJS / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaZioTestJVM / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaZioTestJVM / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn] * zioSchemaZioTestNative / buildInfoKeys
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:212
[warn] * zioSchemaZioTestNative / buildInfoPackage
[warn]   +- /workspaces/zio-schema/project/BuildHelper.scala:213
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[info] compiling 58 Scala sources to /workspaces/zio-schema/zio-schema/js/target/scala-2.13/classes ...
[info] compiling 58 Scala sources to /workspaces/zio-schema/zio-schema/jvm/target/scala-2.13/classes ...
[info] compiling 58 Scala sources to /workspaces/zio-schema/zio-schema/native/target/scala-2.13/classes ...
[info] Linking (multithreadingEnabled=true, disable if not used) (9501 ms)
[info] Discovered 3927 classes and 25928 methods after classloading
[info] Checking intermediate code (quick) (302 ms)
[info] Discovered 2810 classes and 15966 methods after optimization
[info] Optimizing (debug mode) (11844 ms)
[info] Produced 105 LLVM IR files
[info] Generating intermediate code (20218 ms)
[info] Compiling to native code (14136 ms)
[info] Linking with [pthread, dl]
[info] Linking native code (immix gc, none lto) (653 ms)
[info] Postprocessing (0 ms)
[info] Total (46082 ms)
[info] Starting process '/workspaces/zio-schema/zio-schema-macros/native/target/scala-2.13/zio-schema-macros-test' on port '32963'.
[info] Fast optimizing /workspaces/zio-schema/zio-schema-macros/js/target/scala-2.13/zio-schema-macros-test-fastopt
[info] done compiling
[info] compiling 5 Scala sources to /workspaces/zio-schema/zio-schema/jvm/target/scala-2.13/test-classes ...
[info] compiling 2 Scala sources to /workspaces/zio-schema/zio-schema-xml/jvm/target/scala-2.13/classes ...
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:245:29: parameter enumSchema in method encodeEnum is never used
[warn]   private def encodeEnum[A](enumSchema: Schema.Enum[_], value: A, elementName: String): Elem = {
[warn]                             ^
[info] done compiling
[info] compiling 7 Scala sources to /workspaces/zio-schema/zio-schema-derivation/jvm/target/scala-2.13/classes ...
[info] done compiling
[info] compiling 7 Scala sources to /workspaces/zio-schema/zio-schema-derivation/js/target/scala-2.13/classes ...
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:485:78: match may not be exhaustive.
[warn] It would fail on the following input: (x: A forSome x not in (scala.util.Left[?,?], scala.util.Right[?,?]))
[warn]                     matchingCase.asInstanceOf[Schema.Case[A, Unit]].construct(()) match {
[warn]                                                                              ^
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:368:36: return statement uses an exception to pass control to the caller of the enclosing named method decodeXml
[warn]               case Left(error)  => return Left(error)
[warn]                                    ^
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:378:36: return statement uses an exception to pass control to the caller of the enclosing named method decodeXml
[warn]               case Left(error)  => return Left(error)
[warn]                                    ^
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:435:36: return statement uses an exception to pass control to the caller of the enclosing named method decodeRecord
[warn]               case Left(error)  => return Left(error)
[warn]                                    ^
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:442:15: return statement uses an exception to pass control to the caller of the enclosing named method decodeRecord
[warn]               return Left(DecodeError.ReadError(Cause.empty, s"Required field '$fieldName' is missing"))
[warn]               ^
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:452:11: return statement uses an exception to pass control to the caller of the enclosing named method decodeRecord
[warn]           return Left(DecodeError.ReadError(Cause.empty, s"Required field '$fieldName' is missing"))
[warn]           ^
[warn] 7 warnings found
[info] done compiling
[info] compiling 5 Scala sources to /workspaces/zio-schema/zio-schema/js/target/scala-2.13/test-classes ...
[info] done compiling
[info] compiling 2 Scala sources to /workspaces/zio-schema/zio-schema-xml/js/target/scala-2.13/classes ...
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:245:29: parameter enumSchema in method encodeEnum is never used
[warn]   private def encodeEnum[A](enumSchema: Schema.Enum[_], value: A, elementName: String): Elem = {
[warn]                             ^
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:485:78: match may not be exhaustive.
[warn] It would fail on the following input: (x: A forSome x not in (scala.util.Left[?,?], scala.util.Right[?,?]))
[warn]                     matchingCase.asInstanceOf[Schema.Case[A, Unit]].construct(()) match {
[warn]                                                                              ^
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:368:36: return statement uses an exception to pass control to the caller of the enclosing named method decodeXml
[warn]               case Left(error)  => return Left(error)
[warn]                                    ^
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:378:36: return statement uses an exception to pass control to the caller of the enclosing named method decodeXml
[warn]               case Left(error)  => return Left(error)
[warn]                                    ^
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:435:36: return statement uses an exception to pass control to the caller of the enclosing named method decodeRecord
[warn]               case Left(error)  => return Left(error)
[warn]                                    ^
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:442:15: return statement uses an exception to pass control to the caller of the enclosing named method decodeRecord
[warn]               return Left(DecodeError.ReadError(Cause.empty, s"Required field '$fieldName' is missing"))
[warn]               ^
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:452:11: return statement uses an exception to pass control to the caller of the enclosing named method decodeRecord
[warn]           return Left(DecodeError.ReadError(Cause.empty, s"Required field '$fieldName' is missing"))
[warn]           ^
[warn] 7 warnings found
[info] done compiling
[info] compiling 5 Scala sources to /workspaces/zio-schema/zio-schema/native/target/scala-2.13/test-classes ...
[info] done compiling
[info] compiling 2 Scala sources to /workspaces/zio-schema/zio-schema-xml/native/target/scala-2.13/classes ...
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:245:29: parameter enumSchema in method encodeEnum is never used
[warn]   private def encodeEnum[A](enumSchema: Schema.Enum[_], value: A, elementName: String): Elem = {
[warn]                             ^
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:485:78: match may not be exhaustive.
[warn] It would fail on the following input: (x: A forSome x not in (scala.util.Left[?,?], scala.util.Right[?,?]))
[warn]                     matchingCase.asInstanceOf[Schema.Case[A, Unit]].construct(()) match {
[warn]                                                                              ^
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:368:36: return statement uses an exception to pass control to the caller of the enclosing named method decodeXml
[warn]               case Left(error)  => return Left(error)
[warn]                                    ^
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:378:36: return statement uses an exception to pass control to the caller of the enclosing named method decodeXml
[warn]               case Left(error)  => return Left(error)
[warn]                                    ^
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:435:36: return statement uses an exception to pass control to the caller of the enclosing named method decodeRecord
[warn]               case Left(error)  => return Left(error)
[warn]                                    ^
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:442:15: return statement uses an exception to pass control to the caller of the enclosing named method decodeRecord
[warn]               return Left(DecodeError.ReadError(Cause.empty, s"Required field '$fieldName' is missing"))
[warn]               ^
[warn] /workspaces/zio-schema/zio-schema-xml/shared/src/main/scala/zio/schema/codec/XmlCodec.scala:452:11: return statement uses an exception to pass control to the caller of the enclosing named method decodeRecord
[warn]           return Left(DecodeError.ReadError(Cause.empty, s"Required field '$fieldName' is missing"))
[warn]           ^
[info] done compiling
[info] compiling 7 Scala sources to /workspaces/zio-schema/zio-schema-derivation/native/target/scala-2.13/classes ...
[warn] 7 warnings found
[info] done compiling
[warn] multiple main classes detected: run 'show discoveredMainClasses' to see the list
[info] Fast optimizing /workspaces/zio-schema/zio-schema/js/target/scala-2.13/zio-schema-test-fastopt
[info] done compiling
[32m+[0m Compiling Regex
  [32m+[0m compile oneOf singleton
  [32m+[0m compile literal
  [32m+[0m compile between
  [32m+[0m compile oneOf several elements
  [32m+[0m compile ?
  [32m+[0m compile +
  [32m+[0m compile *
  [32m+[0m compile repeat n
  [32m+[0m compile repeat n+
  [32m+[0m compile letter
  [32m+[0m compile alternative
  [32m+[0m compile repeat n to m
  [32m+[0m compile digit
  [32m+[0m compile sequence
[info] done compiling
[32m+[0m TimeSpec
[info] compiling 1 Scala source to /workspaces/zio-schema/zio-schema-zio-test/jvm/target/scala-2.13/classes ...
  [32m+[0m Invalid formats
  [32m+[0m Valid formats
[32m+[0m ValidationSpec
  [32m+[0m Optional
  [32m+[0m Greater than
  [32m+[0m Either
  [32m+[0m Contramap
  [32m+[0m Equal to
  [32m+[0m Less than
  [32m+[0m MaxLength
  [32m+[0m Regex email Validation
    [32m+[0m should accept a correct email
    [32m+[0m should reject an invalid email
  [32m+[0m MinLength
  [32m+[0m Regex digit or letter Validation
  [32m+[0m Regex uuid Validations
    [32m+[0m invalid UUID
  [32m+[0m Regex IPv4 Validation
    [32m+[0m should accept a valid IPv4 address
    [32m+[0m should reject an invalid IPv4 address
  [32m+[0m Regex identifier Validation
  [32m+[0m Regex IPv6 Validation
    [32m+[0m should accept a valid IPv6 address
    [32m+[0m should reject an invalid IPv6 address
    [32m+[0m valid UUID
  [32m+[0m Time Validation H
  [32m+[0m Time Validation HH
  [32m+[0m Time Validation mm
  [32m+[0m Time Validation HHmm
  [32m+[0m Time Validation HH:mm:ss
  [32m+[0m Time Validation m
  [32m+[0m Time Validation hh:mm:ss
  [32m+[0m Time Validation HH:mm
  [32m+[0m Time Validation H:m:s
  [32m+[0m Time Validation H:m:s a
  [32m+[0m Time Validation HH:mm:ss a
  [32m+[0m Time Validation h:m:s a
  [32m+[0m Time Validation hh:mm:ss a
  [32m+[0m Time Validation h:m:s
  [32m+[0m Time Validation HH:mm:ss SSSSSSSSS a
  [32m+[0m Time Validation HH:mm:ss S
  [32m+[0m Time Validation HH:mm:ss.SSS
  [32m+[0m Generic record should validate object with missing keys
  [32m+[0m Regex duration Validation
[32m+[0m PhoneNumberValidationSpec
  [32m+[0m Regex phone number validation for Afghanistan
  [32m+[0m Regex phone number validation for Andorra
  [32m+[0m Regex phone number validation for Ascension Island
  [32m+[0m Regex phone number validation for United Arab Emirates
  [32m+[0m Regex phone number validation for Antigua and Barbuda
  [32m+[0m Regex phone number validation for Albania
  [32m+[0m Regex phone number validation for Armenia
  [32m+[0m Regex phone number validation for Anguilla
  [32m+[0m Regex phone number validation for Netherlands Antilles
  [32m+[0m Regex phone number validation for Angola
  [32m+[0m Regex phone number validation for Argentina
  [32m+[0m Regex phone number validation for Antarctica
  [32m+[0m Regex phone number validation for Austria
  [32m+[0m Regex phone number validation for American Samoa
  [32m+[0m Regex phone number validation for Australia
  [32m+[0m Regex phone number validation for Aland Islands
  [32m+[0m Regex phone number validation for Aruba
  [32m+[0m Regex phone number validation for Bosnia and Herzegovina
  [32m+[0m Regex phone number validation for Azerbaijan
  [32m+[0m Regex phone number validation for Barbados
  [32m+[0m Regex phone number validation for Bangladesh
  [32m+[0m Regex phone number validation for Belgium
  [32m+[0m Regex phone number validation for Burkina Faso
  [32m+[0m Regex phone number validation for Bulgaria
  [32m+[0m Regex phone number validation for Bahrain
  [32m+[0m Regex phone number validation for Saint-Barthelemy
  [32m+[0m Regex phone number validation for Benin
  [32m+[0m Regex phone number validation for Bermuda
  [32m+[0m Regex phone number validation for Burundi
  [32m+[0m Regex phone number validation for Bolivia
  [32m+[0m Regex phone number validation for Brunei Darussalam
  [32m+[0m Regex phone number validation for Brazil
  [32m+[0m Regex phone number validation for Caribbean Netherlands
  [32m+[0m Regex phone number validation for Bahamas
  [32m+[0m Regex phone number validation for Bhutan
  [32m+[0m Regex phone number validation for Bouvet Island
  [32m+[0m Regex phone number validation for Botswana
  [32m+[0m Regex phone number validation for Belarus
  [32m+[0m Regex phone number validation for Cocos (Keeling) Islands
  [32m+[0m Regex phone number validation for Canada
  [32m+[0m Regex phone number validation for Congo, (Kinshasa)
  [32m+[0m Regex phone number validation for Belize
  [32m+[0m Regex phone number validation for Congo (Brazzaville)
  [32m+[0m Regex phone number validation for Central African Republic
  [32m+[0m Regex phone number validation for Côte d'Ivoire
  [32m+[0m Regex phone number validation for Chile
  [32m+[0m Regex phone number validation for Cook Islands
  [32m+[0m Regex phone number validation for Switzerland
  [32m+[0m Regex phone number validation for China
  [32m+[0m Regex phone number validation for Cameroon
  [32m+[0m Regex phone number validation for Colombia
  [32m+[0m Regex phone number validation for Costa Rica
  [32m+[0m Regex phone number validation for Cuba
  [32m+[0m Regex phone number validation for Cape Verde
  [32m+[0m Regex phone number validation for Curacao
  [32m+[0m Regex phone number validation for Christmas Island
  [32m+[0m Regex phone number validation for Czech Republic
  [32m+[0m Regex phone number validation for Cyprus
  [32m+[0m Regex phone number validation for Djibouti
  [32m+[0m Regex phone number validation for Dominica
  [32m+[0m Regex phone number validation for Denmark
  [32m+[0m Regex phone number validation for Ecuador
  [32m+[0m Regex phone number validation for Estonia
  [32m+[0m Regex phone number validation for Dominican Republic
  [32m+[0m Regex phone number validation for Algeria
  [32m+[0m Regex phone number validation for Germany
  [32m+[0m Regex phone number validation for Egypt
  [32m+[0m Regex phone number validation for Western Sahara
  [32m+[0m Regex phone number validation for Eritrea
  [32m+[0m Regex phone number validation for Spain
  [32m+[0m Regex phone number validation for Fiji
  [32m+[0m Regex phone number validation for Ethiopia
  [32m+[0m Regex phone number validation for Finland
  [32m+[0m Regex phone number validation for France
  [32m+[0m Regex phone number validation for Micronesia, Federated States of
  [32m+[0m Regex phone number validation for Falkland Islands (Malvinas)
  [32m+[0m Regex phone number validation for Faroe Islands
  [32m+[0m Regex phone number validation for Georgia
  [32m+[0m Regex phone number validation for Gabon
  [32m+[0m Regex phone number validation for United Kingdom
  [32m+[0m Regex phone number validation for Grenada
  [32m+[0m Regex phone number validation for Guernsey
  [32m+[0m Regex phone number validation for Greenland
  [32m+[0m Regex phone number validation for Gibraltar
  [32m+[0m Regex phone number validation for French Guiana
  [32m+[0m Regex phone number validation for Guinea
  [32m+[0m Regex phone number validation for Ghana
  [32m+[0m Regex phone number validation for Guadeloupe
  [32m+[0m Regex phone number validation for Gambia
  [32m+[0m Regex phone number validation for Equatorial Guinea
  [32m+[0m Regex phone number validation for South Sandwich Islands
  [32m+[0m Regex phone number validation for Greece
  [32m+[0m Regex phone number validation for Guam
  [32m+[0m Regex phone number validation for Guinea-Bissau
  [32m+[0m Regex phone number validation for Guatemala
  [32m+[0m Regex phone number validation for Guyana
  [32m+[0m Regex phone number validation for Heard and Mcdonald Islands
  [32m+[0m Regex phone number validation for Honduras
  [32m+[0m Regex phone number validation for Croatia
  [32m+[0m Regex phone number validation for Hong Kong
  [32m+[0m Regex phone number validation for Haiti
  [32m+[0m Regex phone number validation for Indonesia
  [32m+[0m Regex phone number validation for Ireland
  [32m+[0m Regex phone number validation for Isle of Man
  [32m+[0m Regex phone number validation for Israel
  [32m+[0m Regex phone number validation for Hungary
  [32m+[0m Regex phone number validation for India
  [32m+[0m Regex phone number validation for Iraq
  [32m+[0m Regex phone number validation for British Indian Ocean Territory
  [32m+[0m Regex phone number validation for Iran
  [32m+[0m Regex phone number validation for Iceland
  [32m+[0m Regex phone number validation for Italy
  [32m+[0m Regex phone number validation for Jersey
  [32m+[0m Regex phone number validation for Jamaica
  [32m+[0m Regex phone number validation for Kenya
  [32m+[0m Regex phone number validation for Japan
  [32m+[0m Regex phone number validation for Jordan
  [32m+[0m Regex phone number validation for Kiribati
  [32m+[0m Regex phone number validation for Kyrgyzstan
  [32m+[0m Regex phone number validation for Cambodia
  [32m+[0m Regex phone number validation for Comoros
  [32m+[0m Regex phone number validation for Saint Kitts and Nevis
  [32m+[0m Regex phone number validation for North Korea
  [32m+[0m Regex phone number validation for South Korea
  [32m+[0m Regex phone number validation for Kuwait
  [32m+[0m Regex phone number validation for Cayman Islands
  [32m+[0m Regex phone number validation for Kazakhstan
  [32m+[0m Regex phone number validation for Lao PDR
  [32m+[0m Regex phone number validation for Liechtenstein
  [32m+[0m Regex phone number validation for Saint Lucia
  [32m+[0m Regex phone number validation for Lebanon
  [32m+[0m Regex phone number validation for Lesotho
  [32m+[0m Regex phone number validation for Liberia
  [32m+[0m Regex phone number validation for Sri Lanka
  [32m+[0m Regex phone number validation for Lithuania
  [32m+[0m Regex phone number validation for Latvia
  [32m+[0m Regex phone number validation for Luxembourg
  [32m+[0m Regex phone number validation for Libya
  [32m+[0m Regex phone number validation for Morocco
  [32m+[0m Regex phone number validation for Monaco
  [32m+[0m Regex phone number validation for Moldova
  [32m+[0m Regex phone number validation for Montenegro
  [32m+[0m Regex phone number validation for Saint-Martin (French)
  [32m+[0m Regex phone number validation for Madagascar
  [32m+[0m Regex phone number validation for Macedonia
  [32m+[0m Regex phone number validation for Mali
  [32m+[0m Regex phone number validation for Marshall Islands
  [32m+[0m Regex phone number validation for Mongolia
  [32m+[0m Regex phone number validation for Northern Mariana Islands
  [32m+[0m Regex phone number validation for Myanmar
  [32m+[0m Regex phone number validation for Martinique
  [32m+[0m Regex phone number validation for Macao
  [32m+[0m Regex phone number validation for Malta
  [32m+[0m Regex phone number validation for Mauritius
  [32m+[0m Regex phone number validation for Mauritania
  [32m+[0m Regex phone number validation for Montserrat
  [32m+[0m Regex phone number validation for Maldives
  [32m+[0m Regex phone number validation for Malawi
  [32m+[0m Regex phone number validation for Mexico
  [32m+[0m Regex phone number validation for Malaysia
  [32m+[0m Regex phone number validation for Mozambique
  [32m+[0m Regex phone number validation for Namibia
  [32m+[0m Regex phone number validation for Norfolk Island
  [32m+[0m Regex phone number validation for Nicaragua
  [32m+[0m Regex phone number validation for New Caledonia
  [32m+[0m Regex phone number validation for Niger
  [32m+[0m Regex phone number validation for Nigeria
  [32m+[0m Regex phone number validation for Norway
  [32m+[0m Regex phone number validation for Nepal
  [32m+[0m Regex phone number validation for Nauru
  [32m+[0m Regex phone number validation for Oman
  [32m+[0m Regex phone number validation for Panama
  [32m+[0m Regex phone number validation for Netherlands
  [32m+[0m Regex phone number validation for New Zealand
  [32m+[0m Regex phone number validation for Niue
  [32m+[0m Regex phone number validation for French Polynesia
  [32m+[0m Regex phone number validation for Peru
  [32m+[0m Regex phone number validation for Pakistan
  [32m+[0m Regex phone number validation for Papua New Guinea
  [32m+[0m Regex phone number validation for Philippines
  [32m+[0m Regex phone number validation for Poland
  [32m+[0m Regex phone number validation for Saint Pierre and Miquelon
  [32m+[0m Regex phone number validation for Pitcairn Islands
  [32m+[0m Regex phone number validation for Puerto Rico
  [32m+[0m Regex phone number validation for Palestinian Territory
  [32m+[0m Regex phone number validation for Portugal
  [32m+[0m Regex phone number validation for Palau
  [32m+[0m Regex phone number validation for Réunion
  [32m+[0m Regex phone number validation for Paraguay
  [32m+[0m Regex phone number validation for Qatar
  [32m+[0m Regex phone number validation for Russian Federation
  [32m+[0m Regex phone number validation for Romania
  [32m+[0m Regex phone number validation for Rwanda
  [32m+[0m Regex phone number validation for Serbia
  [32m+[0m Regex phone number validation for Saudi Arabia
  [32m+[0m Regex phone number validation for Solomon Islands
  [32m+[0m Regex phone number validation for Seychelles
  [32m+[0m Regex phone number validation for Sweden
  [32m+[0m Regex phone number validation for Sudan
  [32m+[0m Regex phone number validation for Singapore
  [32m+[0m Regex phone number validation for Saint Helena
  [32m+[0m Regex phone number validation for Sierra Leone
  [32m+[0m Regex phone number validation for Slovenia
  [32m+[0m Regex phone number validation for Svalbard and Jan Mayen Islands
  [32m+[0m Regex phone number validation for Slovakia
  [32m+[0m Regex phone number validation for Somalia
  [32m+[0m Regex phone number validation for Senegal
  [32m+[0m Regex phone number validation for San Marino
  [32m+[0m Regex phone number validation for Suriname
  [32m+[0m Regex phone number validation for South Sudan
  [32m+[0m Regex phone number validation for Sao Tome and Principe
  [32m+[0m Regex phone number validation for El Salvador
  [32m+[0m Regex phone number validation for Saint Marten
  [32m+[0m Regex phone number validation for Syria
  [32m+[0m Regex phone number validation for Swaziland
  [32m+[0m Regex phone number validation for Turks and Caicos Islands
  [32m+[0m Regex phone number validation for French Southern Territories
  [32m+[0m Regex phone number validation for Togo
  [32m+[0m Regex phone number validation for Chad
  [32m+[0m Regex phone number validation for Tristan da Cunha
  [32m+[0m Regex phone number validation for Tokelau
  [32m+[0m Regex phone number validation for Thailand
  [32m+[0m Regex phone number validation for Timor-Leste
  [32m+[0m Regex phone number validation for Tajikistan
  [32m+[0m Regex phone number validation for Tonga
  [32m+[0m Regex phone number validation for Tunisia
  [32m+[0m Regex phone number validation for Turkey
  [32m+[0m Regex phone number validation for Turkmenistan
  [32m+[0m Regex phone number validation for Tuvalu
  [32m+[0m Regex phone number validation for Trinidad and Tobago
  [32m+[0m Regex phone number validation for Taiwan
  [32m+[0m Regex phone number validation for Tanzania
  [32m+[0m Regex phone number validation for Ukraine
  [32m+[0m Regex phone number validation for Uganda
  [32m+[0m Regex phone number validation for United States of America
  [32m+[0m Regex phone number validation for US Minor Outlying Islands
  [32m+[0m Regex phone number validation for Uruguay
  [32m+[0m Regex phone number validation for Uzbekistan
  [32m+[0m Regex phone number validation for Holy See (Vatican City State)
  [32m+[0m Regex phone number validation for Saint Vincent and Grenadines
  [32m+[0m Regex phone number validation for British Virgin Islands
  [32m+[0m Regex phone number validation for Virgin Islands, US
  [32m+[0m Regex phone number validation for Viet Nam
  [32m+[0m Regex phone number validation for Venezuela
  [32m+[0m Regex phone number validation for Wallis and Futuna Islands
  [32m+[0m Regex phone number validation for Vanuatu
  [32m+[0m Regex phone number validation for Kosovo
  [32m+[0m Regex phone number validation for Yemen
  [32m+[0m Regex phone number validation for Samoa
  [32m+[0m Regex phone number validation for Mayotte
  [32m+[0m Regex phone number validation for South Africa
  [32m+[0m Regex phone number validation for Zimbabwe
  [32m+[0m Regex phone number validation for Zambia
306 tests passed. 0 tests failed. 0 tests ignored.

Executed in 6 s 73 ms

[info] compiling 3 Scala sources to /workspaces/zio-schema/zio-schema-msg-pack/target/scala-2.13/classes ...
[info] compiling 1 Scala source to /workspaces/zio-schema/zio-schema-optics/jvm/target/scala-2.13/classes ...
[info] done compiling
[info] compiling 2 Scala sources to /workspaces/zio-schema/zio-schema-json/jvm/target/scala-2.13/classes ...
[info] done compiling
[info] compiling 2 Scala sources to /workspaces/zio-schema/zio-schema-bson/target/scala-2.13/classes ...
[info] done compiling
[info] compiling 3 Scala sources to /workspaces/zio-schema/zio-schema-protobuf/jvm/target/scala-2.13/classes ...
[info] done compiling
[info] compiling 2 Scala sources to /workspaces/zio-schema/zio-schema-thrift/target/scala-2.13/classes ...
[info] done compiling
[info] compiling 4 Scala sources to /workspaces/zio-schema/zio-schema-avro/target/scala-2.13/classes ...
[info] done compiling
[info] compiling 6 Scala sources to /workspaces/zio-schema/zio-schema-derivation/jvm/target/scala-2.13/test-classes ...
[info] done compiling
[info] Completed tests
[info] done compiling
[32m+[0m ValidationSpec
  [32m+[0m Optional
  [32m+[0m Contramap
  [32m+[0m Either
  [32m+[0m Greater than
  [32m+[0m Less than
  [32m+[0m Equal to
  [32m+[0m MinLength
  [32m+[0m Regex email Validation
    [32m+[0m should reject an invalid email
    [32m+[0m should accept a correct email
  [32m+[0m MaxLength
  [32m+[0m Regex digit or letter Validation
  [32m+[0m Regex identifier Validation
  [32m+[0m Regex IPv4 Validation
    [32m+[0m should accept a valid IPv4 address
    [32m+[0m should reject an invalid IPv4 address
  [32m+[0m Regex uuid Validations
    [32m+[0m invalid UUID
    [32m+[0m valid UUID
  [32m+[0m Regex IPv6 Validation
    [32m+[0m should accept a valid IPv6 address
    [32m+[0m should reject an invalid IPv6 address
  [32m+[0m Time Validation HH
  [32m+[0m Time Validation H
  [33m-[0m [33mTime Validation mm[0m - ignored: 1
  [33m-[0m [33mTime Validation m[0m - ignored: 1
  [32m+[0m Time Validation HHmm
  [32m+[0m Time Validation HH:mm
  [33m-[0m [33mTime Validation HH:mm:ss a[0m - ignored: 1
  [32m+[0m Time Validation HH:mm:ss
  [33m-[0m [33mTime Validation H:m:s a[0m - ignored: 1
  [32m+[0m Time Validation H:m:s
  [33m-[0m [33mTime Validation hh:mm:ss a[0m - ignored: 1
  [32m+[0m Time Validation hh:mm:ss
  [33m-[0m [33mTime Validation h:m:s a[0m - ignored: 1
  [32m+[0m Time Validation h:m:s
  [32m+[0m Time Validation HH:mm:ss S
  [32m+[0m Time Validation HH:mm:ss.SSS
  [33m-[0m [33mTime Validation HH:mm:ss SSSSSSSSS a[0m - ignored: 1
  [32m+[0m Regex duration Validation
  [32m+[0m Generic record should validate object with missing keys
[32m+[0m TimeSpec
  [32m+[0m Valid formats
  [32m+[0m Invalid formats
[32m+[0m PhoneNumberValidationSpec
  [32m+[0m Regex phone number validation for Ascension Island
  [32m+[0m Regex phone number validation for Andorra
  [32m+[0m Regex phone number validation for United Arab Emirates
  [32m+[0m Regex phone number validation for Afghanistan
  [32m+[0m Regex phone number validation for Antigua and Barbuda
  [32m+[0m Regex phone number validation for Anguilla
  [32m+[0m Regex phone number validation for Albania
  [32m+[0m Regex phone number validation for Armenia
  [32m+[0m Regex phone number validation for Netherlands Antilles
  [32m+[0m Regex phone number validation for Angola
  [32m+[0m Regex phone number validation for Antarctica
  [32m+[0m Regex phone number validation for Argentina
  [32m+[0m Regex phone number validation for American Samoa
  [32m+[0m Regex phone number validation for Austria
  [32m+[0m Regex phone number validation for Australia
  [32m+[0m Regex phone number validation for Aruba
  [32m+[0m Regex phone number validation for Aland Islands
  [32m+[0m Regex phone number validation for Azerbaijan
  [32m+[0m Regex phone number validation for Bosnia and Herzegovina
  [32m+[0m Regex phone number validation for Barbados
  [32m+[0m Regex phone number validation for Bangladesh
  [32m+[0m Regex phone number validation for Belgium
  [32m+[0m Regex phone number validation for Burkina Faso
  [32m+[0m Regex phone number validation for Bulgaria
  [32m+[0m Regex phone number validation for Bahrain
  [32m+[0m Regex phone number validation for Burundi
  [32m+[0m Regex phone number validation for Benin
  [32m+[0m Regex phone number validation for Saint-Barthelemy
  [32m+[0m Regex phone number validation for Bermuda
  [32m+[0m Regex phone number validation for Brunei Darussalam
  [32m+[0m Regex phone number validation for Bolivia
  [32m+[0m Regex phone number validation for Caribbean Netherlands
  [32m+[0m Regex phone number validation for Brazil
  [32m+[0m Regex phone number validation for Bahamas
  [32m+[0m Regex phone number validation for Bhutan
  [32m+[0m Regex phone number validation for Bouvet Island
  [32m+[0m Regex phone number validation for Botswana
  [32m+[0m Regex phone number validation for Belarus
  [32m+[0m Regex phone number validation for Belize
  [32m+[0m Regex phone number validation for Canada
  [32m+[0m Regex phone number validation for Cocos (Keeling) Islands
  [32m+[0m Regex phone number validation for Congo, (Kinshasa)
  [32m+[0m Regex phone number validation for Central African Republic
  [32m+[0m Regex phone number validation for Congo (Brazzaville)
  [32m+[0m Regex phone number validation for Switzerland
  [32m+[0m Regex phone number validation for Côte d'Ivoire
  [32m+[0m Regex phone number validation for Cook Islands
  [32m+[0m Regex phone number validation for Chile
  [32m+[0m Regex phone number validation for Cameroon
  [32m+[0m Regex phone number validation for China
  [32m+[0m Regex phone number validation for Colombia
  [32m+[0m Regex phone number validation for Costa Rica
  [32m+[0m Regex phone number validation for Cuba
  [32m+[0m Regex phone number validation for Cape Verde
  [32m+[0m Regex phone number validation for Curacao
  [32m+[0m Regex phone number validation for Christmas Island
  [32m+[0m Regex phone number validation for Cyprus
  [32m+[0m Regex phone number validation for Czech Republic
  [32m+[0m Regex phone number validation for Germany
  [32m+[0m Regex phone number validation for Djibouti
  [32m+[0m Regex phone number validation for Denmark
  [32m+[0m Regex phone number validation for Dominica
  [32m+[0m Regex phone number validation for Dominican Republic
  [32m+[0m Regex phone number validation for Algeria
  [32m+[0m Regex phone number validation for Ecuador
  [32m+[0m Regex phone number validation for Estonia
  [32m+[0m Regex phone number validation for Egypt
  [32m+[0m Regex phone number validation for Western Sahara
  [32m+[0m Regex phone number validation for Eritrea
  [32m+[0m Regex phone number validation for Spain
  [32m+[0m Regex phone number validation for Ethiopia
  [32m+[0m Regex phone number validation for Finland
  [32m+[0m Regex phone number validation for Fiji
  [32m+[0m Regex phone number validation for Falkland Islands (Malvinas)
  [32m+[0m Regex phone number validation for Micronesia, Federated States of
  [32m+[0m Regex phone number validation for Faroe Islands
  [32m+[0m Regex phone number validation for France
  [32m+[0m Regex phone number validation for Gabon
  [32m+[0m Regex phone number validation for United Kingdom
  [32m+[0m Regex phone number validation for Grenada
  [32m+[0m Regex phone number validation for Georgia
  [32m+[0m Regex phone number validation for French Guiana
  [32m+[0m Regex phone number validation for Guernsey
  [32m+[0m Regex phone number validation for Ghana
  [32m+[0m Regex phone number validation for Gibraltar
  [32m+[0m Regex phone number validation for Greenland
  [32m+[0m Regex phone number validation for Gambia
  [32m+[0m Regex phone number validation for Guinea
  [32m+[0m Regex phone number validation for Guadeloupe
  [32m+[0m Regex phone number validation for Equatorial Guinea
  [32m+[0m Regex phone number validation for Greece
  [32m+[0m Regex phone number validation for South Sandwich Islands
  [32m+[0m Regex phone number validation for Guatemala
  [32m+[0m Regex phone number validation for Guam
  [32m+[0m Regex phone number validation for Guinea-Bissau
  [32m+[0m Regex phone number validation for Guyana
  [32m+[0m Regex phone number validation for Hong Kong
  [32m+[0m Regex phone number validation for Heard and Mcdonald Islands
  [32m+[0m Regex phone number validation for Honduras
  [32m+[0m Regex phone number validation for Croatia
  [32m+[0m Regex phone number validation for Haiti
  [32m+[0m Regex phone number validation for Hungary
  [32m+[0m Regex phone number validation for Indonesia
  [32m+[0m Regex phone number validation for Ireland
  [32m+[0m Regex phone number validation for Israel
  [32m+[0m Regex phone number validation for Isle of Man
  [32m+[0m Regex phone number validation for India
  [32m+[0m Regex phone number validation for British Indian Ocean Territory
  [32m+[0m Regex phone number validation for Iraq
  [32m+[0m Regex phone number validation for Iran
  [32m+[0m Regex phone number validation for Iceland
  [32m+[0m Regex phone number validation for Italy
  [32m+[0m Regex phone number validation for Jersey
  [32m+[0m Regex phone number validation for Jamaica
  [32m+[0m Regex phone number validation for Jordan
  [32m+[0m Regex phone number validation for Japan
  [32m+[0m Regex phone number validation for Kenya
  [32m+[0m Regex phone number validation for Kyrgyzstan
  [32m+[0m Regex phone number validation for Cambodia
  [32m+[0m Regex phone number validation for Kiribati
  [32m+[0m Regex phone number validation for Comoros
  [32m+[0m Regex phone number validation for Saint Kitts and Nevis
  [32m+[0m Regex phone number validation for North Korea
  [32m+[0m Regex phone number validation for South Korea
  [32m+[0m Regex phone number validation for Kuwait
  [32m+[0m Regex phone number validation for Cayman Islands
  [32m+[0m Regex phone number validation for Kazakhstan
  [32m+[0m Regex phone number validation for Lao PDR
  [32m+[0m Regex phone number validation for Lebanon
  [32m+[0m Regex phone number validation for Saint Lucia
  [32m+[0m Regex phone number validation for Liechtenstein
  [32m+[0m Regex phone number validation for Sri Lanka
  [32m+[0m Regex phone number validation for Liberia
  [32m+[0m Regex phone number validation for Lesotho
  [32m+[0m Regex phone number validation for Lithuania
  [32m+[0m Regex phone number validation for Luxembourg
[info] Linking (multithreadingEnabled=true, disable if not used) (10470 ms)
  [32m+[0m Regex phone number validation for Latvia
  [32m+[0m Regex phone number validation for Libya
  [32m+[0m Regex phone number validation for Morocco
  [32m+[0m Regex phone number validation for Monaco
[info] Discovered 7197 classes and 41865 methods after classloading
  [32m+[0m Regex phone number validation for Moldova
  [32m+[0m Regex phone number validation for Montenegro
  [32m+[0m Regex phone number validation for Saint-Martin (French)
  [32m+[0m Regex phone number validation for Madagascar
  [32m+[0m Regex phone number validation for Marshall Islands
  [32m+[0m Regex phone number validation for Macedonia
  [32m+[0m Regex phone number validation for Mali
  [32m+[0m Regex phone number validation for Myanmar
  [32m+[0m Regex phone number validation for Mongolia
  [32m+[0m Regex phone number validation for Macao
  [32m+[0m Regex phone number validation for Northern Mariana Islands
  [32m+[0m Regex phone number validation for Martinique
  [32m+[0m Regex phone number validation for Mauritania
  [32m+[0m Regex phone number validation for Montserrat
  [32m+[0m Regex phone number validation for Malta
  [32m+[0m Regex phone number validation for Mauritius
[info] Checking intermediate code (quick) (598 ms)
  [32m+[0m Regex phone number validation for Maldives
  [32m+[0m Regex phone number validation for Malawi
  [32m+[0m Regex phone number validation for Mexico
  [32m+[0m Regex phone number validation for Malaysia
  [32m+[0m Regex phone number validation for Mozambique
  [32m+[0m Regex phone number validation for Namibia
  [32m+[0m Regex phone number validation for New Caledonia
  [32m+[0m Regex phone number validation for Niger
  [32m+[0m Regex phone number validation for Norfolk Island
  [32m+[0m Regex phone number validation for Nigeria
  [32m+[0m Regex phone number validation for Nicaragua
  [32m+[0m Regex phone number validation for Netherlands
  [32m+[0m Regex phone number validation for Norway
  [32m+[0m Regex phone number validation for Nepal
  [32m+[0m Regex phone number validation for Nauru
  [32m+[0m Regex phone number validation for Niue
  [32m+[0m Regex phone number validation for New Zealand
  [32m+[0m Regex phone number validation for Oman
  [32m+[0m Regex phone number validation for Panama
  [32m+[0m Regex phone number validation for Peru
  [32m+[0m Regex phone number validation for French Polynesia
  [32m+[0m Regex phone number validation for Papua New Guinea
  [32m+[0m Regex phone number validation for Philippines
  [32m+[0m Regex phone number validation for Pakistan
  [32m+[0m Regex phone number validation for Poland
  [32m+[0m Regex phone number validation for Saint Pierre and Miquelon
  [32m+[0m Regex phone number validation for Pitcairn Islands
  [32m+[0m Regex phone number validation for Puerto Rico
  [32m+[0m Regex phone number validation for Palestinian Territory
  [32m+[0m Regex phone number validation for Portugal
  [32m+[0m Regex phone number validation for Palau
  [32m+[0m Regex phone number validation for Paraguay
[info] done compiling
  [32m+[0m Regex phone number validation for Qatar
  [32m+[0m Regex phone number validation for Réunion
  [32m+[0m Regex phone number validation for Romania
  [32m+[0m Regex phone number validation for Serbia
  [32m+[0m Regex phone number validation for Russian Federation
  [32m+[0m Regex phone number validation for Rwanda
  [32m+[0m Regex phone number validation for Saudi Arabia
  [32m+[0m Regex phone number validation for Solomon Islands
  [32m+[0m Regex phone number validation for Seychelles
  [32m+[0m Regex phone number validation for Sudan
  [32m+[0m Regex phone number validation for Sweden
  [32m+[0m Regex phone number validation for Singapore
  [32m+[0m Regex phone number validation for Saint Helena
  [32m+[0m Regex phone number validation for Slovenia
  [32m+[0m Regex phone number validation for Svalbard and Jan Mayen Islands
  [32m+[0m Regex phone number validation for Slovakia
  [32m+[0m Regex phone number validation for Sierra Leone
  [32m+[0m Regex phone number validation for San Marino
  [32m+[0m Regex phone number validation for Senegal
  [32m+[0m Regex phone number validation for Somalia
[32m+[0m Compiling Regex
  [32m+[0m Regex phone number validation for Suriname
  [32m+[0m Regex phone number validation for South Sudan
  [32m+[0m Regex phone number validation for Sao Tome and Principe
  [32m+[0m Regex phone number validation for El Salvador
  [32m+[0m Regex phone number validation for Saint Marten
  [32m+[0m Regex phone number validation for Syria
  [32m+[0m Regex phone number validation for Swaziland
  [32m+[0m Regex phone number validation for Tristan da Cunha
  [32m+[0m Regex phone number validation for Turks and Caicos Islands
  [32m+[0m Regex phone number validation for Chad
  [32m+[0m Regex phone number validation for French Southern Territories
  [32m+[0m Regex phone number validation for Togo
  [32m+[0m compile oneOf singleton
  [32m+[0m compile literal
  [32m+[0m compile oneOf several elements
  [32m+[0m compile between
  [32m+[0m Regex phone number validation for Thailand
  [32m+[0m Regex phone number validation for Tajikistan
  [32m+[0m Regex phone number validation for Tokelau
  [32m+[0m Regex phone number validation for Timor-Leste
  [32m+[0m Regex phone number validation for Turkmenistan
  [32m+[0m Regex phone number validation for Tunisia
  [32m+[0m Regex phone number validation for Tonga
  [32m+[0m Regex phone number validation for Turkey
  [32m+[0m Regex phone number validation for Trinidad and Tobago
  [32m+[0m Regex phone number validation for Tuvalu
  [32m+[0m Regex phone number validation for Taiwan
  [32m+[0m Regex phone number validation for Tanzania
  [32m+[0m compile *
  [32m+[0m compile +
  [32m+[0m compile ?
  [32m+[0m compile repeat n
  [32m+[0m Regex phone number validation for Ukraine
  [32m+[0m Regex phone number validation for Uganda
  [32m+[0m Regex phone number validation for US Minor Outlying Islands
  [32m+[0m Regex phone number validation for United States of America
  [32m+[0m Regex phone number validation for Uruguay
  [32m+[0m Regex phone number validation for Uzbekistan
  [32m+[0m Regex phone number validation for Holy See (Vatican City State)
  [32m+[0m Regex phone number validation for Saint Vincent and Grenadines
  [32m+[0m compile repeat n+
  [32m+[0m compile repeat n to m
  [32m+[0m compile alternative
  [32m+[0m compile letter
  [32m+[0m Regex phone number validation for Venezuela
  [32m+[0m Regex phone number validation for British Virgin Islands
  [32m+[0m Regex phone number validation for Virgin Islands, US
  [32m+[0m Regex phone number validation for Viet Nam
  [32m+[0m Regex phone number validation for Vanuatu
  [32m+[0m Regex phone number validation for Wallis and Futuna Islands
  [32m+[0m Regex phone number validation for Samoa
  [32m+[0m Regex phone number validation for Kosovo
  [32m+[0m compile digit
  [32m+[0m compile sequence
  [32m+[0m Regex phone number validation for Yemen
  [32m+[0m Regex phone number validation for Mayotte
  [32m+[0m Regex phone number validation for South Africa
  [32m+[0m Regex phone number validation for Zambia
  [32m+[0m Regex phone number validation for Zimbabwe
[info] compiling 1 Scala source to /workspaces/zio-schema/zio-schema-optics/js/target/scala-2.13/classes ...
[info] compiling 1 Scala source to /workspaces/zio-schema/zio-schema-zio-test/js/target/scala-2.13/classes ...
[info] done compiling
[info] compiling 3 Scala sources to /workspaces/zio-schema/zio-schema-protobuf/js/target/scala-2.13/classes ...
[info] done compiling
[info] compiling 6 Scala sources to /workspaces/zio-schema/zio-schema-derivation/js/target/scala-2.13/test-classes ...
[info] Discovered 7116 classes and 32417 methods after optimization
[info] Optimizing (debug mode) (16632 ms)
[info] done compiling
[info] compiling 2 Scala sources to /workspaces/zio-schema/zio-schema-json/js/target/scala-2.13/classes ...
[info] done compiling
[info] compiling 1 Scala source to /workspaces/zio-schema/zio-schema-zio-test/native/target/scala-2.13/classes ...
[info] done compiling
[info] compiling 1 Scala source to /workspaces/zio-schema/zio-schema-optics/native/target/scala-2.13/classes ...
[info] done compiling
[info] compiling 3 Scala sources to /workspaces/zio-schema/zio-schema-protobuf/native/target/scala-2.13/classes ...
[info] done compiling
[info] compiling 2 Scala sources to /workspaces/zio-schema/zio-schema-json/native/target/scala-2.13/classes ...
[info] done compiling
[info] compiling 6 Scala sources to /workspaces/zio-schema/zio-schema-derivation/native/target/scala-2.13/test-classes ...
[info] done compiling
[info] compiling 2 Scala sources to /workspaces/zio-schema/zio-schema-zio-test/jvm/target/scala-2.13/test-classes ...
[info] done compiling
[info] compiling 12 Scala sources to /workspaces/zio-schema/zio-schema-examples/jvm/target/scala-2.13/classes ...
[warn] /workspaces/zio-schema/zio-schema-examples/shared/src/main/scala/dev/zio/schema/example/example7/Problem.scala:100:16: parameter schema in method decodeFromQueryParams is never used
[warn]     )(implicit schema: Schema[A], decoder: QueryParams => scala.util.Either[String, A]): scala.util.Either[String, A] =
[warn]                ^
[info] done compiling
[info] Done
[warn] multiple main classes detected: run 'show discoveredMainClasses' to see the list
[info] compiling 1 Scala source to /workspaces/zio-schema/zio-schema-docs/target/scala-2.13/classes ...
[info] done compiling
[warn] /workspaces/zio-schema/zio-schema-examples/shared/src/main/scala/dev/zio/schema/example/example8/Decoder.scala:40:113: match may not be exhaustive.
[warn] It would fail on the following inputs: ((_, Right(_)), Right(BothValue(_, _))), ((_, Right(_)), Right(Dictionary(_))), ((_, Right(_)), Right(DynamicAst(_))), ((_, Right(_)), Right(Enumeration(_, _))), ((_, Right(_)), Right(Error(_))), ((_, Right(_)), Right(LeftValue(_))), ((_, Right(_)), Right(NoneValue)), ((_, Right(_)), Right(Primitive(_, _))), ((_, Right(_)), Right(RightValue(_))), ((_, Right(_)), Right(Sequence(_))), ((_, Right(_)), Right(SetValue(_))), ((_, Right(_)), Right(Singleton(_))), ((_, Right(_)), Right(SomeValue(_))), ((_, Right(_)), Right(Tuple(_, _)))
[warn]         }.foldRight[Either[String, DynamicValue]](Right(DynamicValue.Record(TypeId.Structural, ListMap.empty))) {
[warn]                                                                                                                 ^
[warn] /workspaces/zio-schema/zio-schema-examples/shared/src/main/scala/dev/zio/schema/example/example8/Encoder.scala:16:5: match may not be exhaustive.
[warn] It would fail on the following inputs: BothValue(_, _), Dictionary(_), DynamicAst(_), Enumeration(_, _), Error(_), LeftValue(_), NoneValue, RightValue(_), SetValue(_), Singleton(_), SomeValue(_), Tuple(_, _)
[warn]     in match {
[warn]     ^
[warn] three warnings found
[info] done compiling
[info] compiling 2 Scala sources to /workspaces/zio-schema/zio-schema-zio-test/js/target/scala-2.13/test-classes ...
[32m+[0m Derive
  [32m+[0m case object
    [32m+[0m can use existing instance for case object
    [32m+[0m can derive new instance for case object
  [32m+[0m default field values
    [32m+[0m use case class default values
    [32m+[0m prefer field annotations over case class default values
    [32m+[0m use case class default values of generic class
  [32m+[0m support factory
    [32m+[0m factory
  [32m+[0m case class
    [32m+[0m can derive new instance for simple case class
    [32m+[0m can derive new instance for case class containing sequences
    [32m+[0m can use existing instance for simple case class
    [32m+[0m can derive new instance for case class referring another one using an existing instance
    [32m+[0m can derive new instance for case class containing a set
    [32m+[0m can derive new instance for case class containing a map and an either
    [32m+[0m works with with arity > 22
    [32m+[0m can derive new instance for case class containing a 3-tuple field
    [32m+[0m new top level implicit value is not passed as summoned
  [32m+[0m enum
    [32m+[0m can derive instance for enum
    [32m+[0m can derive instance for recursive enum
  [32m+[0m caching
    [32m+[0m reuses derived instances
  [32m+[0m support for unknown types
    [32m+[0m can pick up existing instance for unknown type
    [32m+[0m calls deriveUnknown for unknown type
  [32m+[0m default implementation
    [32m+[0m default tupleN implementation creates proper record schema
  [32m+[0m Scala 2.13 specific tests
[32m+[0m Record Spec
  [32m+[0m Deconstruct should get the values of a case class' fields
    [32m+[0m CaseClass3
    [32m+[0m CaseClass2
    [32m+[0m CaseClass0
    [32m+[0m CaseClass1
    [32m+[0m CaseClass5
    [32m+[0m CaseClass4
    [32m+[0m CaseClass6
    [32m+[0m CaseClass7
    [32m+[0m CaseClass10
    [32m+[0m CaseClass8
    [32m+[0m CaseClass9
    [32m+[0m CaseClass11
    [32m+[0m CaseClass12
    [32m+[0m CaseClass14
    [32m+[0m CaseClass13
    [32m+[0m CaseClass15
    [32m+[0m CaseClass16
    [32m+[0m CaseClass17
    [32m+[0m CaseClass19
    [32m+[0m CaseClass18
    [32m+[0m CaseClass20
    [32m+[0m CaseClass22
    [32m+[0m CaseClass21
[32m+[0m Schema Validation Spec
  [32m+[0m Valid CaseClass2 creation
  [32m+[0m Invalid CaseClass2 creation
  [32m+[0m Invalid CaseClass1 creation
  [32m+[0m Valid CaseClass1 creation
  [32m+[0m Example Data, Left ValidationError
  [32m+[0m Example Data, Right ValidationError
  [32m+[0m Example Data, no ValidationErrors
  [32m+[0m Example Data, Option value without ValidationError
  [32m+[0m Example Data, Option value with ValidationError
  [32m+[0m Example Data, multi element List with ValidationError
  [32m+[0m Example Data, single element List with ValidationError
  [32m+[0m Example Data, Tuple with ValidationError on first element
  [32m+[0m Example Data, Tuple with ValidationError on second element
  [32m+[0m Example Data, Wrapper class wrapping class with ValidationError
  [32m+[0m Example Data, first Enum with ValidationError
  [32m+[0m Validator successfully extracts from validation annotation
  [32m+[0m Example Data, second Enum with ValidationError
[32m+[0m DeriveSchemaSpec
  [32m+[0m Scala 2.13 specific tests
  [32m+[0m Derivation
    [32m+[0m correctly derives case class
    [32m+[0m correctly derives recursive data structure
    [32m+[0m correctly derives case class with arity > 22
    [32m+[0m correctly derives tuple arities from 2 to 22
    [32m+[0m correctly derives case class 0
    [32m+[0m correctly derives recursively for case class
    [32m+[0m correctly derives for case object
    [32m+[0m correctly captures annotations on case class with arity greater than 22
    [32m+[0m correctly captures annotations on case class
    [32m+[0m correctly capture annotations on Enum and cases
    [32m+[0m correctly derives Enum
    [32m+[0m correctly derives recursive Enum with type parameters
    [32m+[0m correctly derives recursive Enum with multiple type parameters
    [32m+[0m correctly derives generic recursive Enum
    [32m+[0m correctly derive mutually recursive data structure
    [32m+[0m correctly derives schema with unused type parameters
    [32m+[0m correctly derives recursive Enum
    [32m+[0m correctly derives generic recursive Enum with multiple type parameters
    [32m+[0m correctly derives mutually recursive case classes
    [32m+[0m correctly derives schema for case classes that use schema
    [32m+[0m correctly derives simpleEnum with annotation
    [32m+[0m correctly derives renaming field when fieldName annotation is present
    [32m+[0m correctly derives optional fields when optional annotation is present
    [32m+[0m correctly derives simpleEnum without annotation
    [32m+[0m correctly derives schema for abstract sealed class with case class subclasses
    [32m+[0m correctly derives Enum with > 22 cases
    [32m+[0m correctly derives schema for abstract sealed class with intermediate subclasses, having case class leaf classes
88 tests passed. 0 tests failed. 0 tests ignored.

Executed in 5 s 49 ms

[info] Fast optimizing /workspaces/zio-schema/zio-schema-derivation/js/target/scala-2.13/zio-schema-derivation-test-fastopt
[info] done compiling
[info] compiling 1 Scala source to /workspaces/zio-schema/zio-schema-xml/jvm/target/scala-2.13/test-classes ...
[info] done compiling
[info] Completed tests
[32m+[0m DeriveGenSpec
  [32m+[0m correctly derives Tuple
  [32m+[0m correctly derives Either
  [32m+[0m correctly derives Collections
  [32m+[0m correctly derives Lazy
  [32m+[0m correctly derives Transform
  [32m+[0m correctly derives Optional
  [32m+[0m correctly derives Enums
[info] Produced 122 LLVM IR files
[info] Generating intermediate code (82387 ms)
  [32m+[0m correctly derives Primitives
[info] done compiling
[info] compiling 12 Scala sources to /workspaces/zio-schema/zio-schema-examples/js/target/scala-2.13/classes ...
  [32m+[0m correctly derives CaseClasses
9 tests passed. 0 tests failed. 0 tests ignored.

Executed in 4 s 772 ms

[info] compiling 2 Scala sources to /workspaces/zio-schema/zio-schema-zio-test/native/target/scala-2.13/test-classes ...
[warn] /workspaces/zio-schema/zio-schema-examples/shared/src/main/scala/dev/zio/schema/example/example7/Problem.scala:100:16: parameter schema in method decodeFromQueryParams is never used
[warn]     )(implicit schema: Schema[A], decoder: QueryParams => scala.util.Either[String, A]): scala.util.Either[String, A] =
[warn]                ^
[info] compiling 1 Scala source to /workspaces/zio-schema/zio-schema-xml/js/target/scala-2.13/test-classes ...
[warn] /workspaces/zio-schema/zio-schema-examples/shared/src/main/scala/dev/zio/schema/example/example8/Decoder.scala:40:113: match may not be exhaustive.
[warn] It would fail on the following inputs: ((_, Right(_)), Right(BothValue(_, _))), ((_, Right(_)), Right(Dictionary(_))), ((_, Right(_)), Right(DynamicAst(_))), ((_, Right(_)), Right(Enumeration(_, _))), ((_, Right(_)), Right(Error(_))), ((_, Right(_)), Right(LeftValue(_))), ((_, Right(_)), Right(NoneValue)), ((_, Right(_)), Right(Primitive(_, _))), ((_, Right(_)), Right(RightValue(_))), ((_, Right(_)), Right(Sequence(_))), ((_, Right(_)), Right(SetValue(_))), ((_, Right(_)), Right(Singleton(_))), ((_, Right(_)), Right(SomeValue(_))), ((_, Right(_)), Right(Tuple(_, _)))
[warn]         }.foldRight[Either[String, DynamicValue]](Right(DynamicValue.Record(TypeId.Structural, ListMap.empty))) {
[warn]                                                                                                                 ^
[warn] /workspaces/zio-schema/zio-schema-examples/shared/src/main/scala/dev/zio/schema/example/example8/Encoder.scala:16:5: match may not be exhaustive.
[warn] It would fail on the following inputs: BothValue(_, _), Dictionary(_), DynamicAst(_), Enumeration(_, _), Error(_), LeftValue(_), NoneValue, RightValue(_), SetValue(_), Singleton(_), SomeValue(_), Tuple(_, _)
[warn]     in match {
[warn]     ^
[info] done compiling
[info] compiling 12 Scala sources to /workspaces/zio-schema/zio-schema-examples/native/target/scala-2.13/classes ...
[warn] /workspaces/zio-schema/zio-schema-examples/shared/src/main/scala/dev/zio/schema/example/example7/Problem.scala:100:16: parameter schema in method decodeFromQueryParams is never used
[warn]     )(implicit schema: Schema[A], decoder: QueryParams => scala.util.Either[String, A]): scala.util.Either[String, A] =
[warn]                ^
[warn] three warnings found
[info] done compiling
[info] done compiling
[info] Completed tests
[info] Fast optimizing /workspaces/zio-schema/zio-schema-zio-test/js/target/scala-2.13/zio-schema-zio-test-test-fastopt
[warn] /workspaces/zio-schema/zio-schema-examples/shared/src/main/scala/dev/zio/schema/example/example8/Decoder.scala:40:113: match may not be exhaustive.
[warn] It would fail on the following inputs: ((_, Right(_)), Right(BothValue(_, _))), ((_, Right(_)), Right(Dictionary(_))), ((_, Right(_)), Right(DynamicAst(_))), ((_, Right(_)), Right(Enumeration(_, _))), ((_, Right(_)), Right(Error(_))), ((_, Right(_)), Right(LeftValue(_))), ((_, Right(_)), Right(NoneValue)), ((_, Right(_)), Right(Primitive(_, _))), ((_, Right(_)), Right(RightValue(_))), ((_, Right(_)), Right(Sequence(_))), ((_, Right(_)), Right(SetValue(_))), ((_, Right(_)), Right(Singleton(_))), ((_, Right(_)), Right(SomeValue(_))), ((_, Right(_)), Right(Tuple(_, _)))
[warn]         }.foldRight[Either[String, DynamicValue]](Right(DynamicValue.Record(TypeId.Structural, ListMap.empty))) {
[warn]                                                                                                                 ^
[warn] /workspaces/zio-schema/zio-schema-examples/shared/src/main/scala/dev/zio/schema/example/example8/Encoder.scala:16:5: match may not be exhaustive.
[warn] It would fail on the following inputs: BothValue(_, _), Dictionary(_), DynamicAst(_), Enumeration(_, _), Error(_), LeftValue(_), NoneValue, RightValue(_), SetValue(_), Singleton(_), SomeValue(_), Tuple(_, _)
[warn]     in match {
[warn]     ^
[warn] three warnings found
[info] done compiling
[32m+[0m DeriveSchemaSpec
  [32m+[0m Derivation
    [32m+[0m correctly derives case class 0
    [32m+[0m correctly derives case class
    [32m+[0m correctly derives case class with arity > 22
    [32m+[0m correctly derives recursive data structure
    [32m+[0m correctly derives tuple arities from 2 to 22
    [32m+[0m correctly derive mutually recursive data structure
    [32m+[0m correctly derives recursively for case class
    [32m+[0m correctly derives for case object
    [32m+[0m correctly captures annotations on case class
    [32m+[0m correctly captures annotations on case class with arity greater than 22
    [32m+[0m correctly derives Enum
    [32m+[0m correctly capture annotations on Enum and cases
    [32m+[0m correctly derives mutually recursive case classes
    [32m+[0m correctly derives recursive Enum with type parameters
    [32m+[0m correctly derives generic recursive Enum
    [32m+[0m correctly derives recursive Enum with multiple type parameters
    [32m+[0m correctly derives generic recursive Enum with multiple type parameters
    [32m+[0m correctly derives schema with unused type parameters
    [32m+[0m correctly derives recursive Enum
    [32m+[0m correctly derives Enum with > 22 cases
    [32m+[0m correctly derives schema for case classes that use schema
    [32m+[0m correctly derives renaming field when fieldName annotation is present
    [32m+[0m correctly derives optional fields when optional annotation is present
    [32m+[0m correctly derives simpleEnum with annotation
    [32m+[0m correctly derives simpleEnum without annotation
    [32m+[0m correctly derives schema for abstract sealed class with case class subclasses
    [32m+[0m correctly derives schema for abstract sealed class with intermediate subclasses, having case class leaf classes
  [32m+[0m Scala 2.13 specific tests
[32m+[0m Record Spec
  [32m+[0m Deconstruct should get the values of a case class' fields
    [32m+[0m CaseClass0
    [32m+[0m CaseClass1
    [32m+[0m CaseClass2
    [32m+[0m CaseClass3
[info] Linking (multithreadingEnabled=true, disable if not used) (15426 ms)
    [32m+[0m CaseClass4
    [32m+[0m CaseClass5
    [32m+[0m CaseClass6
    [32m+[0m CaseClass7
[info] Discovered 11406 classes and 60723 methods after classloading
    [32m+[0m CaseClass8
    [32m+[0m CaseClass9
    [32m+[0m CaseClass10
    [32m+[0m CaseClass11
    [32m+[0m CaseClass12
    [32m+[0m CaseClass13
    [32m+[0m CaseClass14
    [32m+[0m CaseClass15
    [32m+[0m CaseClass16
    [32m+[0m CaseClass17
    [32m+[0m CaseClass18
    [32m+[0m CaseClass19
    [32m+[0m CaseClass20
    [32m+[0m CaseClass21
    [32m+[0m CaseClass22
[32m+[0m Derive
  [32m+[0m case object
[32m+[0m Schema Validation Spec
[info] Checking intermediate code (quick) (1282 ms)
  [32m+[0m Invalid CaseClass1 creation
  [32m+[0m Valid CaseClass1 creation
  [32m+[0m Invalid CaseClass2 creation
  [32m+[0m Valid CaseClass2 creation
  [32m+[0m Example Data, no ValidationErrors
  [32m+[0m Example Data, Left ValidationError
  [32m+[0m Example Data, Right ValidationError
  [32m+[0m Example Data, Option value without ValidationError
    [32m+[0m can derive new instance for case object
    [32m+[0m can use existing instance for case object
  [32m+[0m support for unknown types
  [32m+[0m Example Data, Option value with ValidationError
  [32m+[0m Example Data, single element List with ValidationError
  [32m+[0m Example Data, multi element List with ValidationError
  [32m+[0m Example Data, Tuple with ValidationError on first element
  [32m+[0m Example Data, Tuple with ValidationError on second element
  [32m+[0m Example Data, Wrapper class wrapping class with ValidationError
  [32m+[0m Example Data, first Enum with ValidationError
  [32m+[0m Example Data, second Enum with ValidationError
    [32m+[0m can pick up existing instance for unknown type
    [32m+[0m calls deriveUnknown for unknown type
  [32m+[0m Scala 2.13 specific tests
  [32m+[0m default field values
    [32m+[0m use case class default values
    [32m+[0m use case class default values of generic class
    [32m+[0m prefer field annotations over case class default values
  [32m+[0m support factory
    [32m+[0m factory
  [32m+[0m case class
    [32m+[0m can derive new instance for simple case class
    [32m+[0m can use existing instance for simple case class
    [32m+[0m can derive new instance for case class referring another one using an existing instance
    [32m+[0m can derive new instance for case class containing sequences
    [32m+[0m can derive new instance for case class containing a set
    [32m+[0m can derive new instance for case class containing a map and an either
    [32m+[0m can derive new instance for case class containing a 3-tuple field
    [32m+[0m works with with arity > 22
    [32m+[0m new top level implicit value is not passed as summoned
  [32m+[0m caching
    [32m+[0m reuses derived instances
  [32m+[0m enum
    [32m+[0m can derive instance for enum
    [32m+[0m can derive instance for recursive enum
  [32m+[0m default implementation
    [32m+[0m default tupleN implementation creates proper record schema
  [32m+[0m Validator successfully extracts from validation annotation
[info] Fast optimizing /workspaces/zio-schema/zio-schema-xml/js/target/scala-2.13/zio-schema-xml-test-fastopt
[info] compiling 1 Scala source to /workspaces/zio-schema/zio-schema-xml/native/target/scala-2.13/test-classes ...
[error] Referring to non-existent method java.lang.reflect.Field.get(java.lang.Object)java.lang.Object
[error]   dispatched from java.lang.reflect.Field.get(java.lang.Object)java.lang.Object
[error]   called from private zio.schema.codec.XmlCodec$.encodeRecord(zio.schema.Schema$Record,java.lang.Object,java.lang.String,zio.schema.codec.XmlCodec$Configuration)scala.xml.Elem
[error]   called from zio.schema.codec.XmlCodec$.zio$schema$codec$XmlCodec$$encodeXml(zio.schema.Schema,java.lang.Object,java.lang.String,zio.schema.codec.XmlCodec$Configuration)scala.xml.Elem
[error]   called from zio.schema.codec.XmlCodec$$anon$1.streamEncoder()zio.stream.ZPipeline
[error]   dispatched from zio.schema.codec.BinaryCodec.streamEncoder()zio.stream.ZPipeline
[error]   called from zio.schema.codec.XmlCodecSpec$.spec()zio.test.Spec
[error]   dispatched from zio.test.ZIOSpecAbstract.spec()zio.test.Spec
[error]   called from zio.test.sbt.ZTestTask.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   dispatched from sbt.testing.Task.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.scheduleTask(sbt.testing.Task,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private static org.scalajs.testing.bridge.HTMLRunner$.runAllTasks$1(scala.collection.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.runTests(sbt.testing.Framework,scala.collection.immutable.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.onLoad(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.HTMLRunner$.start(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.Bridge$.start()void
[error]   called from static org.scalajs.testing.bridge.Bridge.start()void
[error]   called from core module module initializers
[error] involving instantiated classes:
[error]   zio.schema.codec.XmlCodec$
[error]   zio.schema.codec.XmlCodec$$anon$1
[error]   zio.schema.codec.XmlCodecSpec$
[error]   zio.test.sbt.ZTestTask
[error]   org.scalajs.testing.bridge.HTMLRunner$
[error]   org.scalajs.testing.bridge.Bridge$
[error] Referring to non-existent method java.lang.reflect.Field.setAccessible(boolean)void
[error]   dispatched from java.lang.reflect.Field.setAccessible(boolean)void
[error]   called from private zio.schema.codec.XmlCodec$.encodeRecord(zio.schema.Schema$Record,java.lang.Object,java.lang.String,zio.schema.codec.XmlCodec$Configuration)scala.xml.Elem
[error]   called from zio.schema.codec.XmlCodec$.zio$schema$codec$XmlCodec$$encodeXml(zio.schema.Schema,java.lang.Object,java.lang.String,zio.schema.codec.XmlCodec$Configuration)scala.xml.Elem
[error]   called from zio.schema.codec.XmlCodec$$anon$1.streamEncoder()zio.stream.ZPipeline
[error]   dispatched from zio.schema.codec.BinaryCodec.streamEncoder()zio.stream.ZPipeline
[error]   called from zio.schema.codec.XmlCodecSpec$.spec()zio.test.Spec
[error]   dispatched from zio.test.ZIOSpecAbstract.spec()zio.test.Spec
[error]   called from zio.test.sbt.ZTestTask.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   dispatched from sbt.testing.Task.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.scheduleTask(sbt.testing.Task,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private static org.scalajs.testing.bridge.HTMLRunner$.runAllTasks$1(scala.collection.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.runTests(sbt.testing.Framework,scala.collection.immutable.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.onLoad(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.HTMLRunner$.start(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.Bridge$.start()void
[error]   called from static org.scalajs.testing.bridge.Bridge.start()void
[error]   called from core module module initializers
[error] involving instantiated classes:
[error]   zio.schema.codec.XmlCodec$
[error]   zio.schema.codec.XmlCodec$$anon$1
[error]   zio.schema.codec.XmlCodecSpec$
[error]   zio.test.sbt.ZTestTask
[error]   org.scalajs.testing.bridge.HTMLRunner$
[error]   org.scalajs.testing.bridge.Bridge$
[error] Referring to non-existent class java.lang.reflect.Field
[error]   called from private zio.schema.codec.XmlCodec$.encodeRecord(zio.schema.Schema$Record,java.lang.Object,java.lang.String,zio.schema.codec.XmlCodec$Configuration)scala.xml.Elem
[error]   called from zio.schema.codec.XmlCodec$.zio$schema$codec$XmlCodec$$encodeXml(zio.schema.Schema,java.lang.Object,java.lang.String,zio.schema.codec.XmlCodec$Configuration)scala.xml.Elem
[error]   called from zio.schema.codec.XmlCodec$$anon$1.streamEncoder()zio.stream.ZPipeline
[error]   dispatched from zio.schema.codec.BinaryCodec.streamEncoder()zio.stream.ZPipeline
[error]   called from zio.schema.codec.XmlCodecSpec$.spec()zio.test.Spec
[error]   dispatched from zio.test.ZIOSpecAbstract.spec()zio.test.Spec
[error]   called from zio.test.sbt.ZTestTask.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   dispatched from sbt.testing.Task.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.scheduleTask(sbt.testing.Task,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private static org.scalajs.testing.bridge.HTMLRunner$.runAllTasks$1(scala.collection.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.runTests(sbt.testing.Framework,scala.collection.immutable.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.onLoad(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.HTMLRunner$.start(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.Bridge$.start()void
[error]   called from static org.scalajs.testing.bridge.Bridge.start()void
[error]   called from core module module initializers
[error] involving instantiated classes:
[error]   zio.schema.codec.XmlCodec$
[error]   zio.schema.codec.XmlCodec$$anon$1
[error]   zio.schema.codec.XmlCodecSpec$
[error]   zio.test.sbt.ZTestTask
[error]   org.scalajs.testing.bridge.HTMLRunner$
[error]   org.scalajs.testing.bridge.Bridge$
[error] Referring to non-existent method javax.xml.parsers.SAXParser.getXMLReader()org.xml.sax.XMLReader
[error]   dispatched from javax.xml.parsers.SAXParser.getXMLReader()org.xml.sax.XMLReader
[error]   called from scala.xml.factory.XMLLoader.reader()org.xml.sax.XMLReader
[error]   called from scala.xml.factory.XMLLoader.loadDocument(org.xml.sax.InputSource)scala.xml.Document
[error]   called from scala.xml.factory.XMLLoader.loadStringDocument(java.lang.String)scala.xml.Document
[error]   called from scala.xml.factory.XMLLoader.loadString(java.lang.String)scala.xml.Node
[error]   called from scala.xml.XML$.loadString(java.lang.String)scala.xml.Node
[error]   called from zio.schema.codec.XmlCodec$$anon$1.streamDecoder()zio.stream.ZPipeline
[error]   dispatched from zio.schema.codec.BinaryCodec.streamDecoder()zio.stream.ZPipeline
[error]   called from zio.schema.codec.XmlCodecSpec$.spec()zio.test.Spec
[error]   dispatched from zio.test.ZIOSpecAbstract.spec()zio.test.Spec
[error]   called from zio.test.sbt.ZTestTask.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   dispatched from sbt.testing.Task.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.scheduleTask(sbt.testing.Task,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private static org.scalajs.testing.bridge.HTMLRunner$.runAllTasks$1(scala.collection.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.runTests(sbt.testing.Framework,scala.collection.immutable.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.onLoad(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.HTMLRunner$.start(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.Bridge$.start()void
[error]   called from static org.scalajs.testing.bridge.Bridge.start()void
[error]   called from core module module initializers
[error] involving instantiated classes:
[error]   scala.xml.XML$
[error]   zio.schema.codec.XmlCodec$$anon$1
[error]   zio.schema.codec.XmlCodecSpec$
[error]   zio.test.sbt.ZTestTask
[error]   org.scalajs.testing.bridge.HTMLRunner$
[error]   org.scalajs.testing.bridge.Bridge$
[error] Referring to non-existent method constructor org.xml.sax.InputSource.<init>(java.io.Reader)void
[error]   called from scala.xml.Source$.fromReader(java.io.Reader)org.xml.sax.InputSource
[error]   called from scala.xml.Source$.fromString(java.lang.String)org.xml.sax.InputSource
[error]   called from scala.xml.factory.XMLLoader.loadStringDocument(java.lang.String)scala.xml.Document
[error]   called from scala.xml.factory.XMLLoader.loadString(java.lang.String)scala.xml.Node
[error]   called from scala.xml.XML$.loadString(java.lang.String)scala.xml.Node
[error]   called from zio.schema.codec.XmlCodec$$anon$1.streamDecoder()zio.stream.ZPipeline
[error]   dispatched from zio.schema.codec.BinaryCodec.streamDecoder()zio.stream.ZPipeline
[error]   called from zio.schema.codec.XmlCodecSpec$.spec()zio.test.Spec
[error]   dispatched from zio.test.ZIOSpecAbstract.spec()zio.test.Spec
[error]   called from zio.test.sbt.ZTestTask.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   dispatched from sbt.testing.Task.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.scheduleTask(sbt.testing.Task,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private static org.scalajs.testing.bridge.HTMLRunner$.runAllTasks$1(scala.collection.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.runTests(sbt.testing.Framework,scala.collection.immutable.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.onLoad(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.HTMLRunner$.start(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.Bridge$.start()void
[error]   called from static org.scalajs.testing.bridge.Bridge.start()void
[error]   called from core module module initializers
[error] involving instantiated classes:
[error]   scala.xml.Source$
[error]   scala.xml.XML$
[error]   zio.schema.codec.XmlCodec$$anon$1
[error]   zio.schema.codec.XmlCodecSpec$
[error]   zio.test.sbt.ZTestTask
[error]   org.scalajs.testing.bridge.HTMLRunner$
[error]   org.scalajs.testing.bridge.Bridge$
[error] Referring to non-existent method static javax.xml.parsers.SAXParserFactory.newInstance()javax.xml.parsers.SAXParserFactory
[error]   called from scala.xml.factory.XMLLoader$$anon$1.initialValue()javax.xml.parsers.SAXParser
[error]   called from scala.xml.factory.XMLLoader$$anon$1.initialValue()java.lang.Object
[error]   dispatched from java.lang.ThreadLocal.initialValue()java.lang.Object
[error]   called from java.lang.ThreadLocal.get()java.lang.Object
[error]   called from scala.concurrent.BatchingExecutor.submitSyncBatched(java.lang.Runnable)void
[error]   called from scala.concurrent.ExecutionContext$parasitic$.submitSyncBatched(java.lang.Runnable)void
[error]   called from scala.concurrent.ExecutionContext$parasitic$.execute(java.lang.Runnable)void
[error]   dispatched from scala.concurrent.ExecutionContext.execute(java.lang.Runnable)void
[error]   called from scala.concurrent.impl.Promise$Transformation.submitWithValue(scala.util.Try)scala.concurrent.impl.Promise$Transformation
[error]   called from private scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(scala.concurrent.impl.Promise$Callbacks,scala.util.Try)void
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.tryComplete0(java.lang.Object,scala.util.Try)boolean
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.apply(scala.util.Try)void
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.apply(java.lang.Object)java.lang.Object
[error]   dispatched from scala.Function1.apply(java.lang.Object)java.lang.Object
[error]   called from scala.scalajs.js.ArrayOps$.map$extension(scala.scalajs.js.Array,scala.Function1)scala.scalajs.js.Array
[error]   called from scala.scalajs.reflect.Reflect$.registerInstantiatableClass(java.lang.String,java.lang.Class,scala.scalajs.js.Array)void
[error]   called from static constructor zio.test.sbt.ZTestFramework.<stinit>()void
[error]   called from core module analyzer
[error] involving instantiated classes:
[error]   scala.xml.factory.XMLLoader$$anon$1
[error]   zio.internal.FiberRuntime$$anon$3
[error]   java.lang.ThreadLocal
[error]   scala.concurrent.ExecutionContext$parasitic$
[error]   scala.concurrent.impl.Promise$Transformation
[error]   scala.concurrent.impl.Promise$DefaultPromise
[error]   scala.scalajs.js.ArrayOps$
[error]   scala.scalajs.reflect.Reflect$
[error] Referring to non-existent method javax.xml.parsers.SAXParserFactory.newSAXParser()javax.xml.parsers.SAXParser
[error]   dispatched from javax.xml.parsers.SAXParserFactory.newSAXParser()javax.xml.parsers.SAXParser
[error]   called from scala.xml.factory.XMLLoader$$anon$1.initialValue()javax.xml.parsers.SAXParser
[error]   called from scala.xml.factory.XMLLoader$$anon$1.initialValue()java.lang.Object
[error]   dispatched from java.lang.ThreadLocal.initialValue()java.lang.Object
[error]   called from java.lang.ThreadLocal.get()java.lang.Object
[error]   called from scala.concurrent.BatchingExecutor.submitSyncBatched(java.lang.Runnable)void
[error]   called from scala.concurrent.ExecutionContext$parasitic$.submitSyncBatched(java.lang.Runnable)void
[error]   called from scala.concurrent.ExecutionContext$parasitic$.execute(java.lang.Runnable)void
[error]   dispatched from scala.concurrent.ExecutionContext.execute(java.lang.Runnable)void
[error]   called from scala.concurrent.impl.Promise$Transformation.submitWithValue(scala.util.Try)scala.concurrent.impl.Promise$Transformation
[error]   called from private scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(scala.concurrent.impl.Promise$Callbacks,scala.util.Try)void
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.tryComplete0(java.lang.Object,scala.util.Try)boolean
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.apply(scala.util.Try)void
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.apply(java.lang.Object)java.lang.Object
[error]   dispatched from scala.Function1.apply(java.lang.Object)java.lang.Object
[error]   called from scala.scalajs.js.ArrayOps$.map$extension(scala.scalajs.js.Array,scala.Function1)scala.scalajs.js.Array
[error]   called from scala.scalajs.reflect.Reflect$.registerInstantiatableClass(java.lang.String,java.lang.Class,scala.scalajs.js.Array)void
[error]   called from static constructor zio.test.sbt.ZTestFramework.<stinit>()void
[error]   called from core module analyzer
[error] involving instantiated classes:
[error]   scala.xml.factory.XMLLoader$$anon$1
[error]   zio.internal.FiberRuntime$$anon$3
[error]   java.lang.ThreadLocal
[error]   scala.concurrent.ExecutionContext$parasitic$
[error]   scala.concurrent.impl.Promise$Transformation
[error]   scala.concurrent.impl.Promise$DefaultPromise
[error]   scala.scalajs.js.ArrayOps$
[error]   scala.scalajs.reflect.Reflect$
[error] Referring to non-existent class javax.xml.parsers.SAXParserFactory
[error]   called from scala.xml.factory.XMLLoader$$anon$1.initialValue()javax.xml.parsers.SAXParser
[error]   called from scala.xml.factory.XMLLoader$$anon$1.initialValue()java.lang.Object
[error]   dispatched from java.lang.ThreadLocal.initialValue()java.lang.Object
[error]   called from java.lang.ThreadLocal.get()java.lang.Object
[error]   called from scala.concurrent.BatchingExecutor.submitSyncBatched(java.lang.Runnable)void
[error]   called from scala.concurrent.ExecutionContext$parasitic$.submitSyncBatched(java.lang.Runnable)void
[error]   called from scala.concurrent.ExecutionContext$parasitic$.execute(java.lang.Runnable)void
[error]   dispatched from scala.concurrent.ExecutionContext.execute(java.lang.Runnable)void
[error]   called from scala.concurrent.impl.Promise$Transformation.submitWithValue(scala.util.Try)scala.concurrent.impl.Promise$Transformation
[error]   called from private scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(scala.concurrent.impl.Promise$Callbacks,scala.util.Try)void
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.tryComplete0(java.lang.Object,scala.util.Try)boolean
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.apply(scala.util.Try)void
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.apply(java.lang.Object)java.lang.Object
[error]   dispatched from scala.Function1.apply(java.lang.Object)java.lang.Object
[error]   called from scala.scalajs.js.ArrayOps$.map$extension(scala.scalajs.js.Array,scala.Function1)scala.scalajs.js.Array
[error]   called from scala.scalajs.reflect.Reflect$.registerInstantiatableClass(java.lang.String,java.lang.Class,scala.scalajs.js.Array)void
[error]   called from static constructor zio.test.sbt.ZTestFramework.<stinit>()void
[error]   called from core module analyzer
[error] involving instantiated classes:
[error]   scala.xml.factory.XMLLoader$$anon$1
[error]   zio.internal.FiberRuntime$$anon$3
[error]   java.lang.ThreadLocal
[error]   scala.concurrent.ExecutionContext$parasitic$
[error]   scala.concurrent.impl.Promise$Transformation
[error]   scala.concurrent.impl.Promise$DefaultPromise
[error]   scala.scalajs.js.ArrayOps$
[error]   scala.scalajs.reflect.Reflect$
[error] Referring to non-existent method javax.xml.parsers.SAXParserFactory.setXIncludeAware(boolean)void
[error]   dispatched from javax.xml.parsers.SAXParserFactory.setXIncludeAware(boolean)void
[error]   called from scala.xml.factory.XMLLoader.scala$xml$factory$XMLLoader$$setSafeDefaults(javax.xml.parsers.SAXParserFactory)void
[error]   called from scala.xml.factory.XMLLoader$$anon$1.initialValue()javax.xml.parsers.SAXParser
[error]   called from scala.xml.factory.XMLLoader$$anon$1.initialValue()java.lang.Object
[error]   dispatched from java.lang.ThreadLocal.initialValue()java.lang.Object
[error]   called from java.lang.ThreadLocal.get()java.lang.Object
[error]   called from scala.concurrent.BatchingExecutor.submitSyncBatched(java.lang.Runnable)void
[error]   called from scala.concurrent.ExecutionContext$parasitic$.submitSyncBatched(java.lang.Runnable)void
[error]   called from scala.concurrent.ExecutionContext$parasitic$.execute(java.lang.Runnable)void
[error]   dispatched from scala.concurrent.ExecutionContext.execute(java.lang.Runnable)void
[error]   called from scala.concurrent.impl.Promise$Transformation.submitWithValue(scala.util.Try)scala.concurrent.impl.Promise$Transformation
[error]   called from private scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(scala.concurrent.impl.Promise$Callbacks,scala.util.Try)void
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.tryComplete0(java.lang.Object,scala.util.Try)boolean
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.apply(scala.util.Try)void
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.apply(java.lang.Object)java.lang.Object
[error]   dispatched from scala.Function1.apply(java.lang.Object)java.lang.Object
[error]   called from scala.scalajs.js.ArrayOps$.map$extension(scala.scalajs.js.Array,scala.Function1)scala.scalajs.js.Array
[error]   called from scala.scalajs.reflect.Reflect$.registerInstantiatableClass(java.lang.String,java.lang.Class,scala.scalajs.js.Array)void
[error]   called from static constructor zio.test.sbt.ZTestFramework.<stinit>()void
[error]   called from core module analyzer
[error] involving instantiated classes:
[error]   scala.xml.factory.XMLLoader$$anon$1
[error]   zio.internal.FiberRuntime$$anon$3
[error]   java.lang.ThreadLocal
[error]   scala.concurrent.ExecutionContext$parasitic$
[error]   scala.concurrent.impl.Promise$Transformation
[error]   scala.concurrent.impl.Promise$DefaultPromise
[error]   scala.scalajs.js.ArrayOps$
[error]   scala.scalajs.reflect.Reflect$
[error] Referring to non-existent method javax.xml.parsers.SAXParserFactory.setFeature(java.lang.String,boolean)void
[error]   dispatched from javax.xml.parsers.SAXParserFactory.setFeature(java.lang.String,boolean)void
[error]   called from scala.xml.factory.XMLLoader.scala$xml$factory$XMLLoader$$setSafeDefaults(javax.xml.parsers.SAXParserFactory)void
[error]   called from scala.xml.factory.XMLLoader$$anon$1.initialValue()javax.xml.parsers.SAXParser
[error]   called from scala.xml.factory.XMLLoader$$anon$1.initialValue()java.lang.Object
[error]   dispatched from java.lang.ThreadLocal.initialValue()java.lang.Object
[error]   called from java.lang.ThreadLocal.get()java.lang.Object
[error]   called from scala.concurrent.BatchingExecutor.submitSyncBatched(java.lang.Runnable)void
[error]   called from scala.concurrent.ExecutionContext$parasitic$.submitSyncBatched(java.lang.Runnable)void
[error]   called from scala.concurrent.ExecutionContext$parasitic$.execute(java.lang.Runnable)void
[error]   dispatched from scala.concurrent.ExecutionContext.execute(java.lang.Runnable)void
[error]   called from scala.concurrent.impl.Promise$Transformation.submitWithValue(scala.util.Try)scala.concurrent.impl.Promise$Transformation
[error]   called from private scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(scala.concurrent.impl.Promise$Callbacks,scala.util.Try)void
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.tryComplete0(java.lang.Object,scala.util.Try)boolean
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.apply(scala.util.Try)void
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.apply(java.lang.Object)java.lang.Object
[error]   dispatched from scala.Function1.apply(java.lang.Object)java.lang.Object
[error]   called from scala.scalajs.js.ArrayOps$.map$extension(scala.scalajs.js.Array,scala.Function1)scala.scalajs.js.Array
[error]   called from scala.scalajs.reflect.Reflect$.registerInstantiatableClass(java.lang.String,java.lang.Class,scala.scalajs.js.Array)void
[error]   called from static constructor zio.test.sbt.ZTestFramework.<stinit>()void
[error]   called from core module analyzer
[error] involving instantiated classes:
[error]   scala.xml.factory.XMLLoader$$anon$1
[error]   zio.internal.FiberRuntime$$anon$3
[error]   java.lang.ThreadLocal
[error]   scala.concurrent.ExecutionContext$parasitic$
[error]   scala.concurrent.impl.Promise$Transformation
[error]   scala.concurrent.impl.Promise$DefaultPromise
[error]   scala.scalajs.js.ArrayOps$
[error]   scala.scalajs.reflect.Reflect$
[error] Referring to non-existent method javax.xml.parsers.SAXParserFactory.setNamespaceAware(boolean)void
[error]   dispatched from javax.xml.parsers.SAXParserFactory.setNamespaceAware(boolean)void
[error]   called from scala.xml.factory.XMLLoader.scala$xml$factory$XMLLoader$$setSafeDefaults(javax.xml.parsers.SAXParserFactory)void
[error]   called from scala.xml.factory.XMLLoader$$anon$1.initialValue()javax.xml.parsers.SAXParser
[error]   called from scala.xml.factory.XMLLoader$$anon$1.initialValue()java.lang.Object
[error]   dispatched from java.lang.ThreadLocal.initialValue()java.lang.Object
[error]   called from java.lang.ThreadLocal.get()java.lang.Object
[error]   called from scala.concurrent.BatchingExecutor.submitSyncBatched(java.lang.Runnable)void
[error]   called from scala.concurrent.ExecutionContext$parasitic$.submitSyncBatched(java.lang.Runnable)void
[error]   called from scala.concurrent.ExecutionContext$parasitic$.execute(java.lang.Runnable)void
[error]   dispatched from scala.concurrent.ExecutionContext.execute(java.lang.Runnable)void
[error]   called from scala.concurrent.impl.Promise$Transformation.submitWithValue(scala.util.Try)scala.concurrent.impl.Promise$Transformation
[error]   called from private scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(scala.concurrent.impl.Promise$Callbacks,scala.util.Try)void
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.tryComplete0(java.lang.Object,scala.util.Try)boolean
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.apply(scala.util.Try)void
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.apply(java.lang.Object)java.lang.Object
[error]   dispatched from scala.Function1.apply(java.lang.Object)java.lang.Object
[error]   called from scala.scalajs.js.ArrayOps$.map$extension(scala.scalajs.js.Array,scala.Function1)scala.scalajs.js.Array
[error]   called from scala.scalajs.reflect.Reflect$.registerInstantiatableClass(java.lang.String,java.lang.Class,scala.scalajs.js.Array)void
[error]   called from static constructor zio.test.sbt.ZTestFramework.<stinit>()void
[error]   called from core module analyzer
[error] involving instantiated classes:
[error]   scala.xml.factory.XMLLoader$$anon$1
[error]   zio.internal.FiberRuntime$$anon$3
[error]   java.lang.ThreadLocal
[error]   scala.concurrent.ExecutionContext$parasitic$
[error]   scala.concurrent.impl.Promise$Transformation
[error]   scala.concurrent.impl.Promise$DefaultPromise
[error]   scala.scalajs.js.ArrayOps$
[error]   scala.scalajs.reflect.Reflect$
[error] Referring to non-existent class javax.xml.parsers.SAXParserFactory
[error]   called from scala.xml.factory.XMLLoader.scala$xml$factory$XMLLoader$$setSafeDefaults(javax.xml.parsers.SAXParserFactory)void
[error]   called from scala.xml.factory.XMLLoader$$anon$1.initialValue()javax.xml.parsers.SAXParser
[error]   called from scala.xml.factory.XMLLoader$$anon$1.initialValue()java.lang.Object
[error]   dispatched from java.lang.ThreadLocal.initialValue()java.lang.Object
[error]   called from java.lang.ThreadLocal.get()java.lang.Object
[error]   called from scala.concurrent.BatchingExecutor.submitSyncBatched(java.lang.Runnable)void
[error]   called from scala.concurrent.ExecutionContext$parasitic$.submitSyncBatched(java.lang.Runnable)void
[error]   called from scala.concurrent.ExecutionContext$parasitic$.execute(java.lang.Runnable)void
[error]   dispatched from scala.concurrent.ExecutionContext.execute(java.lang.Runnable)void
[error]   called from scala.concurrent.impl.Promise$Transformation.submitWithValue(scala.util.Try)scala.concurrent.impl.Promise$Transformation
[error]   called from private scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(scala.concurrent.impl.Promise$Callbacks,scala.util.Try)void
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.tryComplete0(java.lang.Object,scala.util.Try)boolean
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.apply(scala.util.Try)void
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.apply(java.lang.Object)java.lang.Object
[error]   dispatched from scala.Function1.apply(java.lang.Object)java.lang.Object
[error]   called from scala.scalajs.js.ArrayOps$.map$extension(scala.scalajs.js.Array,scala.Function1)scala.scalajs.js.Array
[error]   called from scala.scalajs.reflect.Reflect$.registerInstantiatableClass(java.lang.String,java.lang.Class,scala.scalajs.js.Array)void
[error]   called from static constructor zio.test.sbt.ZTestFramework.<stinit>()void
[error]   called from core module analyzer
[error] involving instantiated classes:
[error]   scala.xml.factory.XMLLoader$$anon$1
[error]   zio.internal.FiberRuntime$$anon$3
[error]   java.lang.ThreadLocal
[error]   scala.concurrent.ExecutionContext$parasitic$
[error]   scala.concurrent.impl.Promise$Transformation
[error]   scala.concurrent.impl.Promise$DefaultPromise
[error]   scala.scalajs.js.ArrayOps$
[error]   scala.scalajs.reflect.Reflect$
[error] Referring to non-existent class javax.xml.parsers.SAXParser
[error]   called from scala.xml.factory.XMLLoader$$anon$1.initialValue()javax.xml.parsers.SAXParser
[error]   called from scala.xml.factory.XMLLoader$$anon$1.initialValue()java.lang.Object
[error]   dispatched from java.lang.ThreadLocal.initialValue()java.lang.Object
[error]   called from java.lang.ThreadLocal.get()java.lang.Object
[error]   called from scala.concurrent.BatchingExecutor.submitSyncBatched(java.lang.Runnable)void
[error]   called from scala.concurrent.ExecutionContext$parasitic$.submitSyncBatched(java.lang.Runnable)void
[error]   called from scala.concurrent.ExecutionContext$parasitic$.execute(java.lang.Runnable)void
[error]   dispatched from scala.concurrent.ExecutionContext.execute(java.lang.Runnable)void
[error]   called from scala.concurrent.impl.Promise$Transformation.submitWithValue(scala.util.Try)scala.concurrent.impl.Promise$Transformation
[error]   called from private scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(scala.concurrent.impl.Promise$Callbacks,scala.util.Try)void
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.tryComplete0(java.lang.Object,scala.util.Try)boolean
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.apply(scala.util.Try)void
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.apply(java.lang.Object)java.lang.Object
[error]   dispatched from scala.Function1.apply(java.lang.Object)java.lang.Object
[error]   called from scala.scalajs.js.ArrayOps$.map$extension(scala.scalajs.js.Array,scala.Function1)scala.scalajs.js.Array
[error]   called from scala.scalajs.reflect.Reflect$.registerInstantiatableClass(java.lang.String,java.lang.Class,scala.scalajs.js.Array)void
[error]   called from static constructor zio.test.sbt.ZTestFramework.<stinit>()void
[error]   called from core module analyzer
[error] involving instantiated classes:
[error]   scala.xml.factory.XMLLoader$$anon$1
[error]   zio.internal.FiberRuntime$$anon$3
[error]   java.lang.ThreadLocal
[error]   scala.concurrent.ExecutionContext$parasitic$
[error]   scala.concurrent.impl.Promise$Transformation
[error]   scala.concurrent.impl.Promise$DefaultPromise
[error]   scala.scalajs.js.ArrayOps$
[error]   scala.scalajs.reflect.Reflect$
[error] Referring to non-existent class javax.xml.parsers.SAXParser
[error]   called from scala.xml.factory.XMLLoader$$anon$1.initialValue()java.lang.Object
[error]   dispatched from java.lang.ThreadLocal.initialValue()java.lang.Object
[error]   called from java.lang.ThreadLocal.get()java.lang.Object
[error]   called from scala.concurrent.BatchingExecutor.submitSyncBatched(java.lang.Runnable)void
[error]   called from scala.concurrent.ExecutionContext$parasitic$.submitSyncBatched(java.lang.Runnable)void
[error]   called from scala.concurrent.ExecutionContext$parasitic$.execute(java.lang.Runnable)void
[error]   dispatched from scala.concurrent.ExecutionContext.execute(java.lang.Runnable)void
[error]   called from scala.concurrent.impl.Promise$Transformation.submitWithValue(scala.util.Try)scala.concurrent.impl.Promise$Transformation
[error]   called from private scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(scala.concurrent.impl.Promise$Callbacks,scala.util.Try)void
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.tryComplete0(java.lang.Object,scala.util.Try)boolean
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.apply(scala.util.Try)void
[error]   called from scala.concurrent.impl.Promise$DefaultPromise.apply(java.lang.Object)java.lang.Object
[error]   dispatched from scala.Function1.apply(java.lang.Object)java.lang.Object
[error]   called from scala.scalajs.js.ArrayOps$.map$extension(scala.scalajs.js.Array,scala.Function1)scala.scalajs.js.Array
[error]   called from scala.scalajs.reflect.Reflect$.registerInstantiatableClass(java.lang.String,java.lang.Class,scala.scalajs.js.Array)void
[error]   called from static constructor zio.test.sbt.ZTestFramework.<stinit>()void
[error]   called from core module analyzer
[error] involving instantiated classes:
[error]   scala.xml.factory.XMLLoader$$anon$1
[error]   zio.internal.FiberRuntime$$anon$3
[error]   java.lang.ThreadLocal
[error]   scala.concurrent.ExecutionContext$parasitic$
[error]   scala.concurrent.impl.Promise$Transformation
[error]   scala.concurrent.impl.Promise$DefaultPromise
[error]   scala.scalajs.js.ArrayOps$
[error]   scala.scalajs.reflect.Reflect$
[error] Referring to non-existent class org.xml.sax.EntityResolver
[error]   called from scala.xml.parsing.FactoryAdapter.loadDocument(org.xml.sax.InputSource,org.xml.sax.XMLReader)scala.xml.Document
[error]   called from scala.xml.factory.XMLLoader.loadDocument(org.xml.sax.InputSource)scala.xml.Document
[error]   called from scala.xml.factory.XMLLoader.loadStringDocument(java.lang.String)scala.xml.Document
[error]   called from scala.xml.factory.XMLLoader.loadString(java.lang.String)scala.xml.Node
[error]   called from scala.xml.XML$.loadString(java.lang.String)scala.xml.Node
[error]   called from zio.schema.codec.XmlCodec$$anon$1.streamDecoder()zio.stream.ZPipeline
[error]   dispatched from zio.schema.codec.BinaryCodec.streamDecoder()zio.stream.ZPipeline
[error]   called from zio.schema.codec.XmlCodecSpec$.spec()zio.test.Spec
[error]   dispatched from zio.test.ZIOSpecAbstract.spec()zio.test.Spec
[error]   called from zio.test.sbt.ZTestTask.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   dispatched from sbt.testing.Task.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.scheduleTask(sbt.testing.Task,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private static org.scalajs.testing.bridge.HTMLRunner$.runAllTasks$1(scala.collection.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.runTests(sbt.testing.Framework,scala.collection.immutable.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.onLoad(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.HTMLRunner$.start(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.Bridge$.start()void
[error]   called from static org.scalajs.testing.bridge.Bridge.start()void
[error]   called from core module module initializers
[error] involving instantiated classes:
[error]   scala.xml.parsing.NoBindingFactoryAdapter
[error]   scala.xml.XML$
[error]   zio.schema.codec.XmlCodec$$anon$1
[error]   zio.schema.codec.XmlCodecSpec$
[error]   zio.test.sbt.ZTestTask
[error]   org.scalajs.testing.bridge.HTMLRunner$
[error]   org.scalajs.testing.bridge.Bridge$
[error] Referring to non-existent class org.xml.sax.ErrorHandler
[error]   called from scala.xml.parsing.FactoryAdapter.loadDocument(org.xml.sax.InputSource,org.xml.sax.XMLReader)scala.xml.Document
[error]   called from scala.xml.factory.XMLLoader.loadDocument(org.xml.sax.InputSource)scala.xml.Document
[error]   called from scala.xml.factory.XMLLoader.loadStringDocument(java.lang.String)scala.xml.Document
[error]   called from scala.xml.factory.XMLLoader.loadString(java.lang.String)scala.xml.Node
[error]   called from scala.xml.XML$.loadString(java.lang.String)scala.xml.Node
[error]   called from zio.schema.codec.XmlCodec$$anon$1.streamDecoder()zio.stream.ZPipeline
[error]   dispatched from zio.schema.codec.BinaryCodec.streamDecoder()zio.stream.ZPipeline
[error]   called from zio.schema.codec.XmlCodecSpec$.spec()zio.test.Spec
[error]   dispatched from zio.test.ZIOSpecAbstract.spec()zio.test.Spec
[error]   called from zio.test.sbt.ZTestTask.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   dispatched from sbt.testing.Task.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.scheduleTask(sbt.testing.Task,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private static org.scalajs.testing.bridge.HTMLRunner$.runAllTasks$1(scala.collection.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.runTests(sbt.testing.Framework,scala.collection.immutable.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.onLoad(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.HTMLRunner$.start(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.Bridge$.start()void
[error]   called from static org.scalajs.testing.bridge.Bridge.start()void
[error]   called from core module module initializers
[error] involving instantiated classes:
[error]   scala.xml.parsing.NoBindingFactoryAdapter
[error]   scala.xml.XML$
[error]   zio.schema.codec.XmlCodec$$anon$1
[error]   zio.schema.codec.XmlCodecSpec$
[error]   zio.test.sbt.ZTestTask
[error]   org.scalajs.testing.bridge.HTMLRunner$
[error]   org.scalajs.testing.bridge.Bridge$
[error] Referring to non-existent class org.xml.sax.SAXNotSupportedException
[error]   called from scala.xml.parsing.FactoryAdapter.loadDocument(org.xml.sax.InputSource,org.xml.sax.XMLReader)scala.xml.Document
[error]   called from scala.xml.factory.XMLLoader.loadDocument(org.xml.sax.InputSource)scala.xml.Document
[error]   called from scala.xml.factory.XMLLoader.loadStringDocument(java.lang.String)scala.xml.Document
[error]   called from scala.xml.factory.XMLLoader.loadString(java.lang.String)scala.xml.Node
[error]   called from scala.xml.XML$.loadString(java.lang.String)scala.xml.Node
[error]   called from zio.schema.codec.XmlCodec$$anon$1.streamDecoder()zio.stream.ZPipeline
[error]   dispatched from zio.schema.codec.BinaryCodec.streamDecoder()zio.stream.ZPipeline
[error]   called from zio.schema.codec.XmlCodecSpec$.spec()zio.test.Spec
[error]   dispatched from zio.test.ZIOSpecAbstract.spec()zio.test.Spec
[error]   called from zio.test.sbt.ZTestTask.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   dispatched from sbt.testing.Task.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.scheduleTask(sbt.testing.Task,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private static org.scalajs.testing.bridge.HTMLRunner$.runAllTasks$1(scala.collection.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.runTests(sbt.testing.Framework,scala.collection.immutable.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.onLoad(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.HTMLRunner$.start(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.Bridge$.start()void
[error]   called from static org.scalajs.testing.bridge.Bridge.start()void
[error]   called from core module module initializers
[error] involving instantiated classes:
[error]   scala.xml.parsing.NoBindingFactoryAdapter
[error]   scala.xml.XML$
[error]   zio.schema.codec.XmlCodec$$anon$1
[error]   zio.schema.codec.XmlCodecSpec$
[error]   zio.test.sbt.ZTestTask
[error]   org.scalajs.testing.bridge.HTMLRunner$
[error]   org.scalajs.testing.bridge.Bridge$
[error] Referring to non-existent class org.xml.sax.SAXNotRecognizedException
[error]   called from scala.xml.parsing.FactoryAdapter.loadDocument(org.xml.sax.InputSource,org.xml.sax.XMLReader)scala.xml.Document
[error]   called from scala.xml.factory.XMLLoader.loadDocument(org.xml.sax.InputSource)scala.xml.Document
[error]   called from scala.xml.factory.XMLLoader.loadStringDocument(java.lang.String)scala.xml.Document
[error]   called from scala.xml.factory.XMLLoader.loadString(java.lang.String)scala.xml.Node
[error]   called from scala.xml.XML$.loadString(java.lang.String)scala.xml.Node
[error]   called from zio.schema.codec.XmlCodec$$anon$1.streamDecoder()zio.stream.ZPipeline
[error]   dispatched from zio.schema.codec.BinaryCodec.streamDecoder()zio.stream.ZPipeline
[error]   called from zio.schema.codec.XmlCodecSpec$.spec()zio.test.Spec
[error]   dispatched from zio.test.ZIOSpecAbstract.spec()zio.test.Spec
[error]   called from zio.test.sbt.ZTestTask.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   dispatched from sbt.testing.Task.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.scheduleTask(sbt.testing.Task,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private static org.scalajs.testing.bridge.HTMLRunner$.runAllTasks$1(scala.collection.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.runTests(sbt.testing.Framework,scala.collection.immutable.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.onLoad(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.HTMLRunner$.start(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.Bridge$.start()void
[error]   called from static org.scalajs.testing.bridge.Bridge.start()void
[error]   called from core module module initializers
[error] involving instantiated classes:
[error]   scala.xml.parsing.NoBindingFactoryAdapter
[error]   scala.xml.XML$
[error]   zio.schema.codec.XmlCodec$$anon$1
[error]   zio.schema.codec.XmlCodecSpec$
[error]   zio.test.sbt.ZTestTask
[error]   org.scalajs.testing.bridge.HTMLRunner$
[error]   org.scalajs.testing.bridge.Bridge$
[error] Referring to non-existent class org.xml.sax.ext.DefaultHandler2
[error]   called from constructor scala.xml.parsing.FactoryAdapter.<init>()void
[error]   called from constructor scala.xml.parsing.NoBindingFactoryAdapter.<init>()void
[error]   called from scala.xml.factory.XMLLoader.adapter()scala.xml.parsing.FactoryAdapter
[error]   called from scala.xml.factory.XMLLoader.loadDocument(org.xml.sax.InputSource)scala.xml.Document
[error]   called from scala.xml.factory.XMLLoader.loadStringDocument(java.lang.String)scala.xml.Document
[error]   called from scala.xml.factory.XMLLoader.loadString(java.lang.String)scala.xml.Node
[error]   called from scala.xml.XML$.loadString(java.lang.String)scala.xml.Node
[error]   called from zio.schema.codec.XmlCodec$$anon$1.streamDecoder()zio.stream.ZPipeline
[error]   dispatched from zio.schema.codec.BinaryCodec.streamDecoder()zio.stream.ZPipeline
[error]   called from zio.schema.codec.XmlCodecSpec$.spec()zio.test.Spec
[error]   dispatched from zio.test.ZIOSpecAbstract.spec()zio.test.Spec
[error]   called from zio.test.sbt.ZTestTask.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   dispatched from sbt.testing.Task.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.scheduleTask(sbt.testing.Task,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private static org.scalajs.testing.bridge.HTMLRunner$.runAllTasks$1(scala.collection.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.runTests(sbt.testing.Framework,scala.collection.immutable.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.onLoad(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.HTMLRunner$.start(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.Bridge$.start()void
[error]   called from static org.scalajs.testing.bridge.Bridge.start()void
[error]   called from core module module initializers
[error] involving instantiated classes:
[error]   scala.xml.XML$
[error]   zio.schema.codec.XmlCodec$$anon$1
[error]   zio.schema.codec.XmlCodecSpec$
[error]   zio.test.sbt.ZTestTask
[error]   org.scalajs.testing.bridge.HTMLRunner$
[error]   org.scalajs.testing.bridge.Bridge$
[error] Referring to non-existent class org.xml.sax.InputSource
[error]   called from scala.xml.parsing.FactoryAdapter.loadDocument(org.xml.sax.InputSource)scala.xml.Document
[error]   dispatched from scala.xml.factory.XMLLoader.loadDocument(org.xml.sax.InputSource)scala.xml.Document
[error]   called from scala.xml.factory.XMLLoader.loadStringDocument(java.lang.String)scala.xml.Document
[error]   called from scala.xml.factory.XMLLoader.loadString(java.lang.String)scala.xml.Node
[error]   called from scala.xml.XML$.loadString(java.lang.String)scala.xml.Node
[error]   called from zio.schema.codec.XmlCodec$$anon$1.streamDecoder()zio.stream.ZPipeline
[error]   dispatched from zio.schema.codec.BinaryCodec.streamDecoder()zio.stream.ZPipeline
[error]   called from zio.schema.codec.XmlCodecSpec$.spec()zio.test.Spec
[error]   dispatched from zio.test.ZIOSpecAbstract.spec()zio.test.Spec
[error]   called from zio.test.sbt.ZTestTask.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   dispatched from sbt.testing.Task.execute(sbt.testing.EventHandler,[sbt.testing.Logger,scala.Function1)void
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.scheduleTask(sbt.testing.Task,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private static org.scalajs.testing.bridge.HTMLRunner$.runAllTasks$1(scala.collection.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.runTests(sbt.testing.Framework,scala.collection.immutable.Seq,org.scalajs.testing.bridge.HTMLRunner$UI)scala.concurrent.Future
[error]   called from private org.scalajs.testing.bridge.HTMLRunner$.onLoad(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.HTMLRunner$.start(org.scalajs.testing.common.IsolatedTestSet)void
[error]   called from org.scalajs.testing.bridge.Bridge$.start()void
[error]   called from static org.scalajs.testing.bridge.Bridge.start()void
[error]   called from core module module initializers
[error] involving instantiated classes:
[error]   scala.xml.parsing.NoBindingFactoryAdapter
[error]   scala.xml.XML$
[error]   zio.schema.codec.XmlCodec$$anon$1
[error]   zio.schema.codec.XmlCodecSpec$
[error]   zio.test.sbt.ZTestTask
[error]   org.scalajs.testing.bridge.HTMLRunner$
[error]   org.scalajs.testing.bridge.Bridge$
[error] Not showing 25 more linking errors
[info] done compiling
[info] Linking (multithreadingEnabled=true, disable if not used) (12329 ms)
[info] Discovered 7238 classes and 42806 methods after classloading
[32m+[0m XmlCodecSpec
  [32m+[0m primitive types
[info] Checking intermediate code (quick) (638 ms)
    [32m+[0m encode and decode Int
    [32m+[0m encode and decode String
    [32m+[0m encode and decode Boolean
    [32m+[0m encode and decode LocalDate
    [32m+[0m encode and decode Option[String]
    [32m+[0m encode and decode UUID
  [32m+[0m streaming
    [32m+[0m stream encode and decode simple values
    [32m+[0m stream encode and decode case classes
    [32m+[0m stream encode and decode with large collection
  [32m+[0m XmlCodec should be created from schema
  [32m+[0m enums
    [33m-[0m [33mencode and decode enum with no fields[0m - ignored: 1
    [33m-[0m [33mencode and decode enum with fields[0m - ignored: 1
  [32m+[0m collections
    [32m+[0m encode and decode Set
    [32m+[0m encode and decode List
    [32m+[0m encode and decode Map
  [32m+[0m case classes
    [33m-[0m [33mencode and decode with attribute option enabled[0m - ignored: 1
    [32m+[0m encode and decode simple case class
    [32m+[0m encode and decode nested case class
15 tests passed. 0 tests failed. 3 tests ignored.

Executed in 2 s 328 ms

[info] compiling 18 Scala sources to /workspaces/zio-schema/tests/jvm/target/scala-2.13/test-classes ...
[info] Discovered 11332 classes and 48165 methods after optimization
[info] Optimizing (debug mode) (26972 ms)
[info] Compiling to native code (89186 ms)
[info] Linking with [pthread, dl]
[info] Linking native code (immix gc, none lto) (2728 ms)
[info] Postprocessing (0 ms)
[info] Total (174300 ms)
[info] Completed tests
[info] Discovered 7161 classes and 33973 methods after optimization
[info] Optimizing (debug mode) (13162 ms)
[32m+[0m DeriveGenSpec
  [32m+[0m correctly derives Tuple
  [32m+[0m correctly derives Either
  [32m+[0m correctly derives Collections
  [32m+[0m correctly derives Optional
  [32m+[0m correctly derives Transform
  [32m+[0m correctly derives Lazy
  [32m+[0m correctly derives Enums
  [32m+[0m correctly derives CaseClasses
  [32m+[0m correctly derives Primitives
[info] Done
[info] Starting process '/workspaces/zio-schema/zio-schema/native/target/scala-2.13/zio-schema-test' on port '41835'.
[32m+[0m TimeSpec
  [32m+[0m Valid formats
  [32m+[0m Invalid formats
[info] Starting process '/workspaces/zio-schema/zio-schema/native/target/scala-2.13/zio-schema-test' on port '33095'.
[32m+[0m Compiling Regex
  [32m+[0m compile oneOf singleton
  [32m+[0m compile between
  [32m+[0m compile oneOf several elements
  [32m+[0m compile literal
  [32m+[0m compile *
  [32m+[0m compile +
  [32m+[0m compile ?
  [32m+[0m compile repeat n to m
  [32m+[0m compile repeat n+
  [32m+[0m compile repeat n
  [32m+[0m compile alternative
  [32m+[0m compile digit
  [32m+[0m compile letter
  [32m+[0m compile sequence
[32m+[0m ValidationSpec
  [32m+[0m Optional
  [32m+[0m Either
  [32m+[0m Contramap
  [32m+[0m Greater than
  [32m+[0m Equal to
  [32m+[0m MinLength
  [32m+[0m Less than
  [32m+[0m Regex email Validation
    [32m+[0m should reject an invalid email
    [32m+[0m should accept a correct email
  [32m+[0m MaxLength
  [32m+[0m Regex identifier Validation
  [32m+[0m Regex digit or letter Validation
  [32m+[0m Regex IPv4 Validation
    [32m+[0m should accept a valid IPv4 address
    [32m+[0m should reject an invalid IPv4 address
  [32m+[0m Time Validation HH
  [32m+[0m Time Validation H
  [33m-[0m [33mTime Validation mm[0m - ignored: 1
  [33m-[0m [33mTime Validation m[0m - ignored: 1
  [32m+[0m Time Validation HHmm
  [32m+[0m Time Validation HH:mm
  [32m+[0m Time Validation HH:mm:ss
  [33m-[0m [33mTime Validation HH:mm:ss a[0m - ignored: 1
  [32m+[0m Time Validation H:m:s
  [33m-[0m [33mTime Validation H:m:s a[0m - ignored: 1
  [32m+[0m Time Validation hh:mm:ss
  [32m+[0m Regex uuid Validations
    [32m+[0m invalid UUID
    [32m+[0m valid UUID
  [33m-[0m [33mTime Validation hh:mm:ss a[0m - ignored: 1
  [33m-[0m [33mTime Validation h:m:s a[0m - ignored: 1
  [32m+[0m Time Validation h:m:s
  [32m+[0m Time Validation HH:mm:ss S
  [33m-[0m [33mTime Validation HH:mm:ss SSSSSSSSS a[0m - ignored: 1
  [32m+[0m Time Validation HH:mm:ss.SSS
  [32m+[0m Generic record should validate object with missing keys
  [32m+[0m Regex IPv6 Validation
    [32m+[0m should reject an invalid IPv6 address
    [32m+[0m should accept a valid IPv6 address
  [32m+[0m Regex duration Validation
[32m+[0m PhoneNumberValidationSpec
  [32m+[0m Regex phone number validation for Ascension Island
  [32m+[0m Regex phone number validation for Andorra
  [32m+[0m Regex phone number validation for Afghanistan
  [32m+[0m Regex phone number validation for United Arab Emirates
  [32m+[0m Regex phone number validation for Antigua and Barbuda
  [32m+[0m Regex phone number validation for Anguilla
  [32m+[0m Regex phone number validation for Armenia
  [32m+[0m Regex phone number validation for Albania
  [32m+[0m Regex phone number validation for Netherlands Antilles
  [32m+[0m Regex phone number validation for Angola
  [32m+[0m Regex phone number validation for Antarctica
  [32m+[0m Regex phone number validation for Argentina
  [32m+[0m Regex phone number validation for Austria
  [32m+[0m Regex phone number validation for American Samoa
  [32m+[0m Regex phone number validation for Australia
  [32m+[0m Regex phone number validation for Aruba
  [32m+[0m Regex phone number validation for Aland Islands
  [32m+[0m Regex phone number validation for Bosnia and Herzegovina
  [32m+[0m Regex phone number validation for Azerbaijan
  [32m+[0m Regex phone number validation for Belgium
  [32m+[0m Regex phone number validation for Bangladesh
  [32m+[0m Regex phone number validation for Barbados
  [32m+[0m Regex phone number validation for Burkina Faso
  [32m+[0m Regex phone number validation for Bulgaria
  [32m+[0m Regex phone number validation for Bahrain
  [32m+[0m Regex phone number validation for Benin
  [32m+[0m Regex phone number validation for Burundi
  [32m+[0m Regex phone number validation for Bermuda
  [32m+[0m Regex phone number validation for Saint-Barthelemy
  [32m+[0m Regex phone number validation for Bolivia
  [32m+[0m Regex phone number validation for Brunei Darussalam
  [32m+[0m Regex phone number validation for Caribbean Netherlands
  [32m+[0m Regex phone number validation for Bahamas
  [32m+[0m Regex phone number validation for Bouvet Island
  [32m+[0m Regex phone number validation for Brazil
  [32m+[0m Regex phone number validation for Bhutan
  [32m+[0m Regex phone number validation for Botswana
  [32m+[0m Regex phone number validation for Belarus
  [32m+[0m Regex phone number validation for Belize
  [32m+[0m Regex phone number validation for Canada
  [32m+[0m Regex phone number validation for Cocos (Keeling) Islands
  [32m+[0m Regex phone number validation for Central African Republic
  [32m+[0m Regex phone number validation for Congo, (Kinshasa)
  [32m+[0m Regex phone number validation for Congo (Brazzaville)
  [32m+[0m Regex phone number validation for Switzerland
  [32m+[0m Regex phone number validation for Cook Islands
  [32m+[0m Regex phone number validation for Côte d'Ivoire
  [32m+[0m Regex phone number validation for Chile
  [32m+[0m Regex phone number validation for Cameroon
  [32m+[0m Regex phone number validation for China
  [32m+[0m Regex phone number validation for Colombia
  [32m+[0m Regex phone number validation for Costa Rica
  [32m+[0m Regex phone number validation for Cape Verde
  [32m+[0m Regex phone number validation for Christmas Island
  [32m+[0m Regex phone number validation for Curacao
  [32m+[0m Regex phone number validation for Cuba
  [32m+[0m Regex phone number validation for Cyprus
  [32m+[0m Regex phone number validation for Djibouti
  [32m+[0m Regex phone number validation for Germany
  [32m+[0m Regex phone number validation for Czech Republic
  [32m+[0m Regex phone number validation for Denmark
  [32m+[0m Regex phone number validation for Dominica
  [32m+[0m Regex phone number validation for Algeria
  [32m+[0m Regex phone number validation for Estonia
  [32m+[0m Regex phone number validation for Dominican Republic
  [32m+[0m Regex phone number validation for Ecuador
  [32m+[0m Regex phone number validation for Egypt
  [32m+[0m Regex phone number validation for Western Sahara
  [32m+[0m Regex phone number validation for Spain
  [32m+[0m Regex phone number validation for Eritrea
  [32m+[0m Regex phone number validation for Ethiopia
  [32m+[0m Regex phone number validation for Finland
  [32m+[0m Regex phone number validation for Fiji
  [32m+[0m Regex phone number validation for Falkland Islands (Malvinas)
  [32m+[0m Regex phone number validation for Faroe Islands
  [32m+[0m Regex phone number validation for Micronesia, Federated States of
  [32m+[0m Regex phone number validation for France
  [32m+[0m Regex phone number validation for United Kingdom
  [32m+[0m Regex phone number validation for Gabon
  [32m+[0m Regex phone number validation for Grenada
  [32m+[0m Regex phone number validation for Georgia
  [32m+[0m Regex phone number validation for French Guiana
  [32m+[0m Regex phone number validation for Guernsey
  [32m+[0m Regex phone number validation for Greenland
  [32m+[0m Regex phone number validation for Gibraltar
  [32m+[0m Regex phone number validation for Gambia
  [32m+[0m Regex phone number validation for Ghana
  [32m+[0m Regex phone number validation for Guinea
  [32m+[0m Regex phone number validation for Guadeloupe
  [32m+[0m Regex phone number validation for Greece
  [32m+[0m Regex phone number validation for Equatorial Guinea
  [32m+[0m Regex phone number validation for South Sandwich Islands
  [32m+[0m Regex phone number validation for Guatemala
  [32m+[0m Regex phone number validation for Guam
  [32m+[0m Regex phone number validation for Guinea-Bissau
  [32m+[0m Regex phone number validation for Guyana
  [32m+[0m Regex phone number validation for Hong Kong
  [32m+[0m Regex phone number validation for Heard and Mcdonald Islands
  [32m+[0m Regex phone number validation for Honduras
  [32m+[0m Regex phone number validation for Haiti
  [32m+[0m Regex phone number validation for Croatia
  [32m+[0m Regex phone number validation for Indonesia
  [32m+[0m Regex phone number validation for Israel
  [32m+[0m Regex phone number validation for Ireland
  [32m+[0m Regex phone number validation for Hungary
  [32m+[0m Regex phone number validation for Isle of Man
  [32m+[0m Regex phone number validation for India
  [32m+[0m Regex phone number validation for British Indian Ocean Territory
  [32m+[0m Regex phone number validation for Iraq
  [32m+[0m Regex phone number validation for Iran
  [32m+[0m Regex phone number validation for Italy
  [32m+[0m Regex phone number validation for Iceland
  [32m+[0m Regex phone number validation for Jersey
  [32m+[0m Regex phone number validation for Jordan
  [32m+[0m Regex phone number validation for Jamaica
  [32m+[0m Regex phone number validation for Japan
  [32m+[0m Regex phone number validation for Kenya
  [32m+[0m Regex phone number validation for Kyrgyzstan
  [32m+[0m Regex phone number validation for Cambodia
  [32m+[0m Regex phone number validation for Comoros
  [32m+[0m Regex phone number validation for Kiribati
  [32m+[0m Regex phone number validation for North Korea
  [32m+[0m Regex phone number validation for Saint Kitts and Nevis
  [32m+[0m Regex phone number validation for South Korea
  [32m+[0m Regex phone number validation for Kuwait
  [32m+[0m Regex phone number validation for Kazakhstan
  [32m+[0m Regex phone number validation for Cayman Islands
  [32m+[0m Regex phone number validation for Lao PDR
  [32m+[0m Regex phone number validation for Saint Lucia
  [32m+[0m Regex phone number validation for Lebanon
  [32m+[0m Regex phone number validation for Liechtenstein
  [32m+[0m Regex phone number validation for Liberia
  [32m+[0m Regex phone number validation for Sri Lanka
  [32m+[0m Regex phone number validation for Lithuania
  [32m+[0m Regex phone number validation for Lesotho
  [32m+[0m Regex phone number validation for Luxembourg
  [32m+[0m Regex phone number validation for Latvia
  [32m+[0m Regex phone number validation for Morocco
  [32m+[0m Regex phone number validation for Libya
  [32m+[0m Regex phone number validation for Monaco
  [32m+[0m Regex phone number validation for Moldova
  [32m+[0m Regex phone number validation for Saint-Martin (French)
  [32m+[0m Regex phone number validation for Montenegro
  [32m+[0m Regex phone number validation for Macedonia
  [32m+[0m Regex phone number validation for Madagascar
  [32m+[0m Regex phone number validation for Marshall Islands
  [32m+[0m Regex phone number validation for Mali
  [32m+[0m Regex phone number validation for Macao
  [32m+[0m Regex phone number validation for Myanmar
  [32m+[0m Regex phone number validation for Mongolia
  [32m+[0m Regex phone number validation for Northern Mariana Islands
  [32m+[0m Regex phone number validation for Mauritania
  [32m+[0m Regex phone number validation for Martinique
  [32m+[0m Regex phone number validation for Montserrat
  [32m+[0m Regex phone number validation for Malta
  [32m+[0m Regex phone number validation for Malawi
  [32m+[0m Regex phone number validation for Mauritius
  [32m+[0m Regex phone number validation for Maldives
  [32m+[0m Regex phone number validation for Mexico
  [32m+[0m Regex phone number validation for Mozambique
  [32m+[0m Regex phone number validation for Malaysia
  [32m+[0m Regex phone number validation for Namibia
  [32m+[0m Regex phone number validation for New Caledonia
  [32m+[0m Regex phone number validation for Niger
  [32m+[0m Regex phone number validation for Norfolk Island
  [32m+[0m Regex phone number validation for Nicaragua
  [32m+[0m Regex phone number validation for Nigeria
  [32m+[0m Regex phone number validation for Netherlands
  [32m+[0m Regex phone number validation for Norway
  [32m+[0m Regex phone number validation for Nepal
  [32m+[0m Regex phone number validation for Nauru
  [32m+[0m Regex phone number validation for New Zealand
  [32m+[0m Regex phone number validation for Niue
  [32m+[0m Regex phone number validation for Panama
  [32m+[0m Regex phone number validation for Oman
  [32m+[0m Regex phone number validation for Peru
  [32m+[0m Regex phone number validation for French Polynesia
  [32m+[0m Regex phone number validation for Papua New Guinea
  [32m+[0m Regex phone number validation for Philippines
  [32m+[0m Regex phone number validation for Pakistan
  [32m+[0m Regex phone number validation for Poland
  [32m+[0m Regex phone number validation for Pitcairn Islands
  [32m+[0m Regex phone number validation for Puerto Rico
  [32m+[0m Regex phone number validation for Saint Pierre and Miquelon
  [32m+[0m Regex phone number validation for Portugal
  [32m+[0m Regex phone number validation for Palau
  [32m+[0m Regex phone number validation for Palestinian Territory
  [32m+[0m Regex phone number validation for Paraguay
  [32m+[0m Regex phone number validation for Qatar
  [32m+[0m Regex phone number validation for Réunion
  [32m+[0m Regex phone number validation for Serbia
  [32m+[0m Regex phone number validation for Romania
  [32m+[0m Regex phone number validation for Rwanda
  [32m+[0m Regex phone number validation for Solomon Islands
  [32m+[0m Regex phone number validation for Russian Federation
  [32m+[0m Regex phone number validation for Seychelles
  [32m+[0m Regex phone number validation for Saudi Arabia
  [32m+[0m Regex phone number validation for Singapore
  [32m+[0m Regex phone number validation for Sweden
  [32m+[0m Regex phone number validation for Sudan
  [32m+[0m Regex phone number validation for Saint Helena
  [32m+[0m Regex phone number validation for Svalbard and Jan Mayen Islands
  [32m+[0m Regex phone number validation for Sierra Leone
  [32m+[0m Regex phone number validation for Slovenia
  [32m+[0m Regex phone number validation for Slovakia
  [32m+[0m Regex phone number validation for San Marino
  [32m+[0m Regex phone number validation for Senegal
  [32m+[0m Regex phone number validation for Suriname
  [32m+[0m Regex phone number validation for South Sudan
  [32m+[0m Regex phone number validation for Somalia
  [32m+[0m Regex phone number validation for Syria
  [32m+[0m Regex phone number validation for Saint Marten
  [32m+[0m Regex phone number validation for El Salvador
  [32m+[0m Regex phone number validation for Turks and Caicos Islands
  [32m+[0m Regex phone number validation for Swaziland
  [32m+[0m Regex phone number validation for Tristan da Cunha
  [32m+[0m Regex phone number validation for Sao Tome and Principe
  [32m+[0m Regex phone number validation for French Southern Territories
  [32m+[0m Regex phone number validation for Chad
  [32m+[0m Regex phone number validation for Thailand
  [32m+[0m Regex phone number validation for Tajikistan
  [32m+[0m Regex phone number validation for Tokelau
  [32m+[0m Regex phone number validation for Togo
  [32m+[0m Regex phone number validation for Timor-Leste
  [32m+[0m Regex phone number validation for Tonga
  [32m+[0m Regex phone number validation for Tunisia
  [32m+[0m Regex phone number validation for Turkmenistan
  [32m+[0m Regex phone number validation for Trinidad and Tobago
  [32m+[0m Regex phone number validation for Taiwan
  [32m+[0m Regex phone number validation for Turkey
  [32m+[0m Regex phone number validation for Tuvalu
  [32m+[0m Regex phone number validation for Tanzania
  [32m+[0m Regex phone number validation for US Minor Outlying Islands
  [32m+[0m Regex phone number validation for Ukraine
  [32m+[0m Regex phone number validation for Uruguay
  [32m+[0m Regex phone number validation for Uganda
  [32m+[0m Regex phone number validation for United States of America
  [32m+[0m Regex phone number validation for Uzbekistan
  [32m+[0m Regex phone number validation for Saint Vincent and Grenadines
  [32m+[0m Regex phone number validation for British Virgin Islands
  [32m+[0m Regex phone number validation for Virgin Islands, US
  [32m+[0m Regex phone number validation for Holy See (Vatican City State)
  [32m+[0m Regex phone number validation for Venezuela
  [32m+[0m Regex phone number validation for Viet Nam
  [32m+[0m Regex phone number validation for Wallis and Futuna Islands
  [32m+[0m Regex phone number validation for Vanuatu
  [32m+[0m Regex phone number validation for Kosovo
  [32m+[0m Regex phone number validation for Samoa
  [32m+[0m Regex phone number validation for Mayotte
  [32m+[0m Regex phone number validation for Yemen
  [32m+[0m Regex phone number validation for South Africa
  [32m+[0m Regex phone number validation for Zambia
  [32m+[0m Regex phone number validation for Zimbabwe
